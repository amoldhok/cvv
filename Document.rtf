{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fnil\fcharset0 Calibri;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang9 why use class what is benefit of class \par
ability to store different types of data : means we can store different types of data \par
reusablity: once we declare class we can reuse it more than one time.\par
object : object is block of memory where we cna store data object is a instance of class\par
what is difference between reference and obejct \par
reference is variable which hold address of object and object is block of memory where we can store class data.\par
if we not use reference with object then jvm create new object every time in memory \par
if we want to use some obejct multiple time then we use reference with obejct \par
yes we can apply more than one reference on single obejct but object old content may be lost\par
sorting : sorting is technique with the help of sorting we can organize data in ascending or descending order \par
types of sorting \par
1. bubble sorting : bubble sorting is simplest sorting algorithm that swapp repetedly swapping element.\par
2. selection sort : selection sort select largest and smallest element from sorted and unsorted array.\par
timecomplexity of selection sort 0(n)^2 there is two nested loop one is work with smalled element of array\par
advantage of selection sort \par
simple and easy to work \par
work with small data set \par
\par
disadvantage \par
cant work eith large data set \par
seelction sort has time complexity \par
merger sort() : divinding by array into smaller sub array \par
method with variable : we can pass infinite number of parameter to dunction called as method with variable. it is denoted by ...triple dot\par
pojo class : pojo class measn class with setter and getter method called as pojo class \par
we can store different types of data in pojo class \par
\par
\par
Static variable : \par
static declare within class with static keyword \par
static variable allocate its memory before creating its obeject\par
static variable access by classname.member name \par
static variable access in static function as well as non static function\par
life of static variable is when application running in memory \par
\par
\par
instance variable :\par
instance variable declare within class without static keyword called as instance variable \par
instance varibale allocate its memory after creating its object .\par
instance variable access by using objectname.memebername\par
isntance variable access in non static function \par
life of instance variable when object running in memory \par
\par
\par
local variable :\par
variable declare within function called as local varibale \par
local variable allocate its memory after calling function\par
life of local variable when function in execution\par
\par
\par
\par
what is garbage colelction \par
garbage collection is automatic management technique which is use for realeaase or delete memory of obejct\par
how jvm find obejct is not in use \par
when obejct not use any reference then jvm consider as obejct is not in use.\par
array of obejct \par
array of obejct is use for store multiple object data in single name reference called as array of obejct.\par
\par
what is encapsulation?\par
Ans: encapsulation means hide implementation detail from end user at implemeting level called as encapsulation\par
main goal of encapsulation is data security .\par
when we declare class variable as private then we cant decalre outside of class.\par
\par
what is constrctor ?\par
constructor is same name as class name without return types called as constructor.\par
constructor execute automatically when we create obect of class \par
types of constructor \par
\par
default constructor : if we declare constructor without parameter called as default constructor.\par
parameterized constructor : parameterized constructor means constructor with parameter called as parameterized constructor.\par
when we pass parameter to constructor then we pass parameter to object because constructor calling point is object.\par
selection sort select smallest and largest value from array \par
merge sort \par
dividing array into smaller sub array called as mrge sort\par
advantage of selection sort \par
selecct smallest and largest elemnt form array \par
work with small data set \par
\par
disadvantage \par
does not work with large data set\par
selection sort has time complexity\par
method with varibale : mehtod with varible means we can pass infinite number of parametr to fucntion called as method with vairbale \par
it is denoted by ...\par
garbage collection : garbage collection is automatic technique of jvm which release or delete memory of object when object not in use \par
when object not use any reference then jvm consider as object not in use and jvm delete memory of objct \par
array of obejct is use store multiple obejct data in single name reference call as array of object \par
encapsulation : encapsulation means hide implementation detail from end user called as encapsulation\par
main goal of encapsulation is data security. when we decalre class variable as private then we can access out side of class\par
what is constructor : constructor is same name as class name. constructor call automaticaly whne we create obejct of class \par
types of constructor \par
default constructor : declare constructor without parameter called as default constructor \par
parameterrized constructor : cosntructor with parameter caleld as parameterized constrcutor \par
when we pass parameter to constructor then we need to pass parameter to obejct because constructor calling point is obejct.\par
overloaded constructor : overloaded constructor means same name as constructor name but different parameter called as overloaded consructor.\par
copy constructor : copy constructor is use for constructor chaining ,means we can call one constructor within another constructor without creating its obejct called as copy constructor.\par
using this constructor \par
using super constructor \par
construtor cant have return type once we give return type then it is method in java.\par
can we declae constructor as static : no we cant decalre constructro as static becuase constructor create its memory before creating its obect. constructor cant call without obejct.\par
what is utility class : utility class means class contain only static method and method are public so we can accesible in all program \par
how we can create utility class in java \par
decalre constructor as private and declare public static method .\par
what is single tone calss \par
single tone class is design pattern which is use for create obejct of class only once in application called as single tone class.\par
how to create single tine class.\par
utility class \par
utility class contain static method and static method are public so we can accesible in all program\par
single tine class : single tine class is design pattern which is sue for create obejct of class only once in application.\par
what is difference between cosntrcutor and method \par
cosntructor is same name as class name \par
constructor call automoatically \par
cosnructor cant declare as final \par
cosntructor cant override \par
constructor cant have return type\par
\par
method \par
not conpulsary same name as class name \par
method can override\par
we can declare method as final \par
method have reutn type\par
need to call mannually call automaticaly \par
inheritance : inheritance means transfer property form one class to another class called as inheritance \par
why ise inheritance \par
reusablity  : reusablity once we declare class we can reuse it more than one time called as reusablity.\par
extensiblity : extensiblity means child class aquire prproty from parent class and add its own property called as extensiblity.\par
why java provide obejct class is parent class in java \par
becuse obejct class contain some inbuilt method that require to every class so obejct class is parent class in java.\par
int hashcode() \par
boolean equal()\par
void notidy()\par
void notifyAll()\par
sring to stirng \par
class get class\par
\par
how we can say java is pure obejct oriented \par
cant create application without clas.\par
java is not pue obejct oriented because java support primitive data type ,static keyword,wrapper class.\par
can we use super and this construcotr at same time \par
no we cant use super and this constructor at smae time because both constructor is first line of calling constructor.\par
what is final keyword \par
finalkeyword is non-access specifier in java use with function and class\par
final variable : final variable means once we declare variable as final then we cant change its values \par
final class ; once we declare class as final then we cant inherit that class in another class final class avoid inheritance.\par
how we can avoid overriding in java \par
using final methos we can avoid method overriding in java \par
what is method overriding \par
method overriding means define method in parent class and redefine method in child class called as method overriding.\par
why use method overriding \par
to customized logic of parent class in child class \par
and achieve dynamic polymorphism.\par
important point related to method overiding \par
reutrn type of parent class method and child class method is same.\par
\par
method overloading : method overlaoding measn same methdo name with different parameter in parent class and different parameter in child class called as method overloading.\par
method overloding : means same method nme with different parameter in parent class and different parameter in child clss called as method overloading.\par
how we can call parent logic in method overloading \par
using super keyword we can call parent logic in method overloading.\par
what is super : super is inbuilt reference which prsent in child class and paint to parent class using super we can call parent logic.\par
can we override static method : no we cant override static method in child class. becaue static method use for method hiding purpose.\par
what is method hiding purpose: method hiding means when we create referenc of parent class and object of child class and call to overriden method using prent class refernece then parent logic get executed not child logic.\par
when we create reference of parent class and obect of child class and call to overriden method using parent class reference then parent logic get executed not child logic.\par
what is difference between method overiding and method overloading.\par
overriding \par
overriding is run time polymorphism \par
defien method in parent class and redefine method in child class called as overriding \par
in overriding private and fianl method cant be override \par
high performance due to run time polymorphism \par
\par
overloading\par
overloading is compile time polymorphis \par
low performance due to overloading\par
in method overlaoding same method name with different parameter \par
final and private method can be overloaded.\par
\par
\par
what is abstraction \par
abstraction means hiding information from end user at design level called as abstraction.\par
how we can achieve abstraction in java \par
by using abstract class and abstract method \par
by using interface.\par
\par
what is abstract class and abstract method \par
abstract class means class cant create its obejct and abstract method means method cant have logic.\par
how to declare abstract class and abstract method in java \par
abstract class classname\par
\{\par
abstract reutrn type functionname();\par
\}\par
why use abstract class and abstract method \par
1. achieve abstraction \par
2. achive dynamic polymorphism\par
why we cant create obejct of abstract class \par
becuase abstract class contain non-abstract method  and method dont have logic.\par
can we use abstract keyword with variable : no we cant use abstract keyword with variable becuase abstract keyword is use for abstraction\par
\par
can we declare as method as final : no we cant declare as method as final once we declare method as final then we cant override that method in child class\par
\par
can we declare as abstract method as static : no we can delcare abstract method as static becuase static keyword work compule time polymorphism and abstract keyword  work with runtime polymorphism.\par
can we declare abstract method as private : no becaue it cant support inheritance and method overriding.\par
can we declare abstract method as protected : yes we can declare abstract method as protected it help to override in child class.\par
adapter class : adapter class is intermediate class which contian all blank method that require to abstract class \par
why we need to create reference of abstract class \par
to achieve dynamic polymorphism and losse coupling\par
what is dynamic polymorphism : dynamic polymorphism means obejct bounded with functinality at program run time called as dynamic polymorphism.\par
what is coupling : method of particular class is dependent on particular parameter called as coupling.\par
there are two types of coupling \par
tight coupling : method of particular class is 100% dependent on another class obect called as tight coupling.\par
loose coupling : loose coupling measn method particular class is partially dependent on another class obejct called as loose coupling.\par
what is abstraction : abstraction means hide implementation detail form end user at desing level called as abstraction\par
obejct bounded with functionality at program run time called as dynamic polymorphism \par
coupling : method of particular class is dependent on particular parameter called as coupling \par
there are two types of coupling\par
tight coupling : method of particular class is 100 % deoendent on another class object called as tight coupling \par
loose coupling : method of particular class is partially dependent on another class objecr called as loose coupling .\par
interface : interface3 is same like as abstract class in java.\par
why ise interface \par
achieve 100% abstraction \par
achieve dynamic polymorphism \par
achieve multiple inheritance\par
why java not use multiple inheritance : duw to diamodn problem\par
what is diamond problem : in multiple inheritance there are more than one parent class and single child class if we create object of child class and call to parent then compiler get confuse called as diamond problem.\par
how to work with interface \par
decalre keyword interface \par
interface method cant have a logic becuase they are by default public and abstract interface method cant create its obejct because it is internaly abstract\par
important point related to interface \par
interface cant crete its obejct \par
inteface is bydefault public and abstract.\par
interface variable are public and final\par
we cant declare interface method as final : if we declare then we cant override it\par
we cant delcare iterface method as static : because static method is use for achieve compile time polymorphism and interface method is sue for achieve dynamic polymorphism.\par
can we declare interface method as protected : no we can declre as interfac emethos as protected because if we declare abstract \par
perform inheritance between interface to interface then use extends keyword .\par
interface to class use implements keyword \par
class to class use extends keyword\par
class to interface use implements keyword.\par
\par
what is adapter : adapter class contain all blank method that require all blank method of  interface.\par
can we create object of interface : no we cant create object of interface we can create reference of interface then we create obejct of implementer class.\par
what is purpose of interface : major goal of interface is achieve dynamic polymorphism.\par
how to achieve multiple inheritance using interface .\par
for achieve multiple inheritance using interface for than one base class and one child class and more than one child class\par
\par
\par
\par
}
 