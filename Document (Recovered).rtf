{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1033{\fonttbl{\f0\fswiss\fprq2\fcharset0 Calibri;}{\f1\fswiss\fprq2\fcharset0 Arial;}{\f2\fmodern\fprq1\fcharset0 Consolas;}{\f3\froman\fprq2\fcharset0 Times New Roman;}{\f4\fnil\fcharset0 Calibri;}{\f5\fnil\fcharset2 Symbol;}}
{\colortbl ;\red255\green0\blue0;\red255\green255\blue255;\red255\green255\blue0;\red204\green108\blue29;\red47\green47\blue47;\red217\green232\blue247;\red230\green230\blue250;\red170\green170\blue170;\red18\green144\blue195;\red249\green250\blue244;\red30\green181\blue64;\red121\green171\blue255;\red242\green242\blue0;\red104\green151\blue187;\red167\green236\blue33;\red141\green218\blue248;\red23\green198\blue163;\red243\green236\blue121;\red102\green225\blue248;\red0\green0\blue0;\red150\green236\blue63;\red127\green0\blue85;\red106\green62\blue62;\red0\green0\blue192;\red42\green0\blue255;\red27\green98\blue145;\red62\green171\blue230;\red128\green246\blue167;\red128\green242\blue246;\red160\green160\blue160;}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\widctlpar\sa160\sl252\slmult1\kerning2\b\f0\fs22\lang16393                                ********CORE JAVA*********\par
\cf1 Q. what is java?\par
\cf0 Ans:- java is pure object oriented language. We have two type of object oriented language,\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa160\sl252\slmult1\cf1 Semi object oriented : \cf0 those language work with object oriented language as well as procedural oriented language called as semi object oriented language.\par
{\pntext\f5\'B7\tab}\cf1 Pure object oriented: \cf0 those language work with pure object oriented programming concept called as pure object oriented language.\par

\pard\widctlpar\sa160\sl252\slmult1\cf1 Feature of java:-\par

\pard\widctlpar\li-5\ri65\sa160\sl252\slmult1 Platform independent  :-\cf0  means java generate byte code and byte code is machine independent code means byte code can run on any operating system. \par
\cf1 Robust and secure  :- \par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent360{\pntxtb\'B7}}\fi-360\sa60\tx720\highlight2\f1 Simple and Easy to Learn.\par
{\pntext\f5\'B7\tab}Object-Oriented Programming.\par
{\pntext\f5\'B7\tab}Platform Independence.\par
{\pntext\f5\'B7\tab}Automatic Memory Management.\par
{\pntext\f5\'B7\tab}Security.\par
{\pntext\f5\'B7\tab}Rich API.\par
{\pntext\f5\'B7\tab}Multithreading.\par
{\pntext\f5\'B7\tab}High Performance.\par

\pard\widctlpar\li-5\ri65\sa160\sl252\slmult1\highlight0\f0\par

\pard\widctlpar\sl252\slmult1\cf0\b0  \par

\pard\widctlpar\li360\sa160\sl252\slmult1\b\par

\pard\widctlpar\sa160\sl252\slmult1\cf1 Q. what is difference between c++ and java.\par
Ans: \par
\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\itap2\widctlpar\cf0\highlight3              C++\highlight0\b0\nestcell\highlight3\b                   JAVA\highlight0\b0\nestcell{\*\nesttableprops\trowd\trgaph10\trleft5\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4346\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx8687\nestrow}{\nonesttables\par}

\pard\intbl\itap2\widctlpar\b C++ is semi object oriented language\b0\nestcell\b Java is object oriented language\b0\nestcell{\*\nesttableprops\trowd\trgaph10\trleft5\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4346\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx8687\nestrow}{\nonesttables\par}

\pard\intbl\itap2\widctlpar\b C++ use pointer externally\b0\nestcell\b Java use pointer internally\b0\nestcell{\*\nesttableprops\trowd\trgaph10\trleft5\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4346\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx8687\nestrow}{\nonesttables\par}

\pard\intbl\itap2\widctlpar\b C++ class is by default private\b0\nestcell\b Java class by default use default access specifier\b0\nestcell{\*\nesttableprops\trowd\trgaph10\trleft5\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4346\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx8687\nestrow}{\nonesttables\par}

\pard\intbl\itap2\widctlpar\b C++ use three access specifier\b0\nestcell\b Java use four access specifier\b0\nestcell{\*\nesttableprops\trowd\trgaph10\trleft5\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4346\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx8687\nestrow}{\nonesttables\par}

\pard\intbl\itap2\widctlpar\b C++ use delete operator for release memory\b0\nestcell\nestcell{\*\nesttableprops\trowd\trgaph10\trleft5\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4346\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx8687\nestrow}{\nonesttables\par}

\pard\intbl\itap2\widctlpar\b C++ use friend function\b0\nestcell\b Java not use friend function\b0\nestcell{\*\nesttableprops\trowd\trgaph10\trleft5\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4346\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx8687\nestrow}{\nonesttables\par}

\pard\intbl\itap2\widctlpar\b C++ work with structure\b0\nestcell\b Java doesn\rquote t work with structure\b0\nestcell{\*\nesttableprops\trowd\trgaph10\trleft5\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4346\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx8687\nestrow}{\nonesttables\par}

\pard\intbl\widctlpar\cell\trowd\trgaph10\trleft113\trrh1\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021\row 
\pard\widctlpar\sa160\sl252\slmult1\b\par
\cf1 Q. what is JDK?\par
\cf0 Ans: JDK stand for java development kit , jdk is a group of software which help us to create and execute java application.\par
                  \par
\par
                        JDK\par
COMPILER                     JVM\par
APPLETVIEWER           RMIREGESTRY\par
\par
\cf1 Q. what is compiler?\par
\cf0 Ans: compiler is intermediate code which is use to convert source code into byte code.\par
Source code--------compiler--------byte code\par
\cf1 Q. what is byte code?\par
\cf0 Ans: byte code is machine understandable code ,intermediate code which easily convert into machine code with the help of JVM . \par
\cf1 Importance of byte code is:- \cf0 byte code is machine independent code which is easily convert into machine code with the help of JVM due to machine independent we can run on any operating system.\par
\cf1 Q. why java developed byte code?\par
\cf0 Ans: byte code is platform independent code where platform means operating system . means once we create byte code we execute it on any operating system.\par
\par
\cf1 Q. what is JVM?\par
\cf0 Ans:- jvm stand for java virtual machine it is use to convert byte code into machine code and it is present in JDK or JRE.\par
\cf1 Q. what is access specifier?\par
\cf0 Ans:- access specifier are some keyword which is use for restriction on class and its member.\par
There are four type of access specifier in java.\par
\cf1 1. public: \cf0 we can use public access specifier in same class or outside of class and  same package or outside of package.\par
\cf1 2. private: \cf0 private access specifier is use for restriction on class .\par
\cf1 3. protected:- \cf0 protected access specifier is use for restrict on class use only for child class , not outside of class using object.\par
\cf1 4. default :- \cf0 default access specifier means member can access outside of class but same package.\par
It is package level access specifier. \par
\par
*********ARRAY*********\par
\cf1 Q. what is array?\cf0\par
Ans: array is collection of similar types of data type.\par
\par
\cf1 Q. write a program to input five element in array and display it.\par
Ans: \par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 arrayapplication\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\cf4 int\cf6  \cf13 a\cf10 []\cf7 =\cf4 new\cf6  \cf4 int\cf10 [\cf14 5\cf10 ]\cf7 ;\cf8\par
\cf6\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter five element in array\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf18 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf18 a\cf10 [\cf18 i\cf10 ]\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "display array element\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf18 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "%d\\t"\cf7 ,\cf18 a\cf10 [\cf18 i\cf10 ])\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight0\b\f0\par
\par
\cf1 Q. what is linear search?\par
\cf0 Ans: linear  search means compare every element with every value in array .\par
\cf1  Q. Binary search algorithm?\par
\cf0 Ans: binary search algorithm can apply on sorted array.\par
\cf1 Q. sub array and sequence?\par
\cf0 Ans: sub array means array inside another array called as subarray. sub array is a continuous part of array .\par
\par
\cf1 Q. what is anonymous array in java?\par
\cf0 Ans: array without reference called as anonymous array.\par
\par
\cf1 Q. write a program to create size of five and input value and find pair of index whose sum is equal to input value.\par
Ans:\par
\par
Q. Stack and queue implementation?\par
Ans: \cf0 stack and queue are the implementation of data structure .\par
Stack: stack is linear data structure means we can insert and delete data at one end , stack manage data in last in first out .stack contain one pointer name as top of stack which is used for insert and delete data.\par
Stack is single ended data structure.\par
There are two way to implement stack.\par
1.by using array\par
2.by using linked list\par
\par
\cf1 Operation on stack:\cf0\par
\cf1 1.push : \cf0 push operation means insert element in stack when we insert element in stack top of stack increase by 1.\par
Initial value of stack is -1.\par
When stack is full and we try to insert element in stack then stack overflow means no space to store element in stack. \par
\cf1 2.pop: \cf20 pop operation is used for remove element from stack when we remove data from stack top of stack is decrease by 1. When top of stack is decrease by 1 then stack underflow.\par
\par
\cf1 Q. we have stack with size 3 and store data in stack and perform push and pop operation .\par
\cf20 Ans: \par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 stackapp\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 static\cf6  \cf4 int\cf6  \cf16\i top\cf7\i0 =-\cf14 1\cf7 ;\cf8\par
\cf6\tab\cf4 static\cf6  \cf4 int\cf6  \cf16\i a\cf10\i0 []\cf7 =\cf4 new\cf6  \cf4 int\cf10 [\cf14 5\cf10 ]\cf7 ;\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 do\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "1:push\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "2:Display\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "3:pop\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter your choice\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf4 int\cf6  \cf13 choice\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf4 switch\cf10 (\cf18 choice\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf4 case\cf6  \cf14 1\cf7 :\cf8\par
\cf6\tab\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter value in stack\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf4 int\cf6  \cf13 value\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf4 boolean\cf6  \cf13 b\cf7 =\cf21\i push\cf10\i0 (\cf16\i a\cf7\i0 ,\cf18 value\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf4 if\cf10 (\cf18 b\cf10 )\cf8\par
\cf6\tab\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "valule store in stack"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\tab\tab\cf4 else\cf8\par
\cf6\tab\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "stack is overflow"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\tab\tab\cf4 break\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf4 case\cf6  \cf14 2\cf7 :\cf8\par
\cf6\tab\tab\tab\tab\cf21\i display\cf10\i0 ()\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf4 break\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf4 case\cf6  \cf14 3\cf7 :\cf8\par
\cf6\tab\tab\tab\tab\cf18 value\cf7 =\cf21\i pop\cf10\i0 ()\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf4 if\cf10 (\cf18 value\cf7 !=-\cf14 1\cf10 )\cf8\par
\cf6\tab\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "remove value from stack"\cf7 +\cf18 value\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\tab\tab\cf4 else\cf8\par
\cf6\tab\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "stack is empty"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\tab\tab\cf4 break\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf4 case\cf6  \cf14 4\cf7 :\cf6  \cf8\par
\cf6\tab\tab\tab\tab\cf9 System\cf7 .\cf21\i exit\cf10\i0 (\cf14 0\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf4 break\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf4 default\cf7 :\cf6  \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "wrong choice"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf4 while\cf10 (\cf4 true\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 boolean\cf6  \cf11 push\cf10 (\cf4 int\cf6  \cf12 stack\cf10 []\cf7 ,\cf4 int\cf6  \cf12 val\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 if\cf10 (\cf16\i top\cf7\i0 ==\cf10 (\cf12 stack\cf7 .\cf19 length\cf7 -\cf14 1\cf10 ))\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf4 return\cf6  \cf4 false\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf4 else\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf16\i top\cf7\i0 =\cf16\i top\cf7\i0 +\cf14 1\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf12 stack\cf10 [\cf16\i top\cf10\i0 ]\cf7 =\cf12 val\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf4 false\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 display\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf16\i top\cf7\i0 ;\cf18 i\cf7 >=\cf14 0\cf7 ;\cf18 i\cf7 --\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "stack[%d]--%d"\cf7 ,\cf18 i\cf7 ,\cf16\i a\cf10\i0 [\cf18 i\cf10 ])\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 int\cf6  \cf11 pop\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf16\i top\cf7\i0 ==-\cf14 1\cf7 ?-\cf14 1\cf7 :\cf16\i a\cf10\i0 [\cf16\i top\cf7\i0 --\cf10 ]\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf20\highlight0\b\f0\par
\cf1 Queue implementation of array:\cf20\par
Queue is linear data structure ,  which is used for manage data in first in first out and it is two ended data structure.\par
It has two pointer one is front and one is rear using rear we can insert data in queue and using front we can remove data from stack.\par
\cf1 We can perform operation on queue \par
1.insertion: \cf20 using insertion operation we can insert data in queue when we insert data in queue then rear of queue increment by 1,\par
Initial value of rear is -1.\par
When rear is max-1 then no space for insert data In queue \par
\cf1 2.deletion \cf20 : using deletion operation we can delete data from queue at front end pointer, initial value of front is 0 when we delete value from queue then queue front increase by 1\par
When rear is -1 then queue is empty\par
Front ==rear+1(queue is empty)\par
\par
\cf1 Q. write a program to show given number is Armstrong number or not?\par
\cf20 Ans:\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 armstrong\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\cf4 int\cf6  \cf13 count\cf7 =\cf14 0\cf7 ,\cf13 i\cf7 ,\cf13 p\cf7 ,\cf13 sum\cf7 =\cf14 0\cf7 ,\cf13 rem\cf7 ,\cf13 no\cf7 ,\cf13 temp\cf7 =\cf14 0\cf7 ;\cf8\par
\cf6\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "Enter the number"\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\cf18 no\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf18 temp\cf7 =\cf18 no\cf7 ;\cf8\par
\cf6\tab\cf8\par
\cf6\tab\cf4 while\cf10 (\cf18 no\cf7 !=\cf14 0\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf18 no\cf7 =\cf18 no\cf7 /\cf14 10\cf7 ;\cf8\par
\cf6\tab\tab\cf18 count\cf7 ++;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf18 count\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf18 no\cf7 =\cf18 temp\cf7 ;\cf8\par
\cf6\tab\cf4 while\cf10 (\cf18 no\cf7 !=\cf14 0\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf18 rem\cf7 =\cf18 no\cf7 %\cf14 10\cf7 ;\cf8\par
\cf6\tab\tab\cf18 i\cf7 =\cf14 1\cf7 ;\cf8\par
\cf6\tab\tab\cf18 p\cf7 =\cf14 1\cf7 ;\cf8\par
\cf6\tab\tab\cf4 while\cf10 (\cf18 i\cf7 <=\cf18 count\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf18 p\cf7 =\cf18 p\cf7 *\cf18 rem\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf18 i\cf7 ++;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf8\par
\cf6\tab\tab\cf18 sum\cf7 =\cf18 sum\cf7 +\cf18 p\cf7 ;\cf8\par
\cf6\tab\tab\cf18 no\cf7 =\cf18 no\cf7 /\cf14 10\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 if\cf10 (\cf18 sum\cf7 ==\cf18 temp\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "armstrong number"\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 else\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "not armstrong number"\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf8\par
\cf6\tab\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf10\}\cf8\par
\par
\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf20\highlight0\b\f0\par
Q. operation on array .\par
Ans: \par

\pard\widctlpar\cf22\highlight2\f2 package\cf20\b0  armstrong.java;\par
\par
\cf22\b import\cf20\b0  java.util.Scanner;\par
\par
\cf22\b public\cf20\b0  \cf22\b class\cf20\b0  searchvalue \{\par
\par
\tab\cf22\b public\cf20\b0  \cf22\b static\cf20\b0  \cf22\b void\cf20\b0  main(String[] \cf23 args\cf20 ) \par
\tab\{ \par
\tab\tab\cf22\b int\cf20\b0  \cf23 a\cf20 []=\cf22\b new\cf20\b0  \cf22\b int\cf20\b0 [5];\par
\tab\tab Scanner \cf23\ul xyz\cf20\ulnone =\cf22\b new\cf20\b0  Scanner(System.\cf24\b\i in\cf20\b0\i0 );\par
\tab\tab System.\cf24\b\i out\cf20\b0\i0 .println(\cf25 "enter number in array"\cf20 );\par
\tab\tab\cf22\b for\cf20\b0 (\cf22\b int\cf20\b0  \cf23 i\cf20 =0;\cf23 i\cf20 <\cf23 a\cf20 .\cf24 length\cf20 ;\cf23 i\cf20 ++)\par
\tab\tab\{\par
\tab\tab\tab\cf23 a\cf20 [\cf23 i\cf20 ]=\cf23 xyz\cf20 .nextInt();\par
\tab\tab\}\par
\tab System.\cf24\b\i out\cf20\b0\i0 .println(\cf25 "enter search values"\cf20 );\par
\tab\cf22\b int\cf20\b0  \cf23 svalue\cf20 =\cf23 xyz\cf20 .nextInt();\par
\tab\cf22\b int\cf20\b0  \cf23 result\cf20 =\i searchvalue\i0 (\cf23 a\cf20 ,\cf23 svalue\cf20 );\par
\tab\cf22\b if\cf20\b0 (\cf23 result\cf20 ==1)\par
\tab\{\par
\tab\tab System.\cf24\b\i out\cf20\b0\i0 .println(\cf25 "value found "\cf20 +\cf23 svalue\cf20 );\par
\tab\}\par
\par
\tab\cf22\b else\cf20\b0\par
\tab\{\par
\tab\tab System.\cf24\b\i out\cf20\b0\i0 .println(\cf25 "value not found "\cf20 +\cf23 svalue\cf20 );\par
\tab\}\par
\tab\}\par
\par
\tab\cf22\b private\cf20\b0  \cf22\b static\cf20\b0  \cf22\b int\cf20\b0  \ul searchvalue(\cf22\b int\cf20\b0 [] \cf23 a\cf20 , \cf22\b int\cf20\b0  \cf23 svalue\cf20 )\ulnone\par
\tab\{ \par
\tab\tab\cf22\b for\cf20\b0 (\cf22\b int\cf20\b0  \cf23 i\cf20 =0;\cf23 i\cf20 <\cf23 a\cf20 .\cf24 length\cf20 ;\cf23 i\cf20 ++)\par
\tab\tab\{\par
\tab\tab\tab\cf22\b if\cf20\b0 (\cf23 a\cf20 [\cf23 i\cf20 ]==\cf23 svalue\cf20 )\par
\tab\tab\tab\{\par
\tab\tab\tab\tab\cf22\b return\cf20\b0  1;\par
\tab\tab\tab\}\par
\tab\tab\}\par
\tab\tab\cf22\b return\cf20\b0  0;\tab\par
\tab\}\par
\}\par
\par
\cf8\highlight5\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf20\highlight0\b\f0\par
\cf1 Q. write a java program to print Fibonacci series?\par
Ans:\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 fibonacci\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13\ul no\cf7\ulnone ,\cf13 i\cf7 ,\cf13 f1\cf7 =\cf14 0\cf7 ,\cf13 f2\cf7 =\cf14 1\cf7 ,\cf13 fib\cf7 ;\cf8\par
\cf6\tab\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter number\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 num\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18 i\cf7 =\cf14 1\cf7 ;\cf8\par
\cf6\tab\tab\cf4 while\cf10 (\cf18 i\cf7 <\cf18 num\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf18 fib\cf7 =\cf18 f1\cf7 +\cf18 f2\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf18 f1\cf7 =\cf18 f2\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf18 f2\cf7 =\cf18 fib\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf18 i\cf7 ++;\cf8\par
\cf6\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "%d\\n"\cf7 ,\cf18 fib\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf1\highlight0\b\f0\par
Q. write a program to perform menu driven program.\par
Ans: \par
Perform prime number \par
Perform perfect number\par
Perform duck number\par
Perform Fibonacci series\par
Ans:\par
\par
\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 menudriven\cf8\par
\cf10\{\cf8\par
\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 choice\cf7 ,\cf13 limit\cf7 ,\cf13 sum\cf7 =\cf14 0\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "1: print prime number\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "2: print perfect number\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "3: print duck number\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "4: print Fibonacci number\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter choice\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf18 choice\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter limit\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf18 limit\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf4 switch\cf10 (\cf18 choice\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf4 case\cf6  \cf14 1\cf7 :\cf6  \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "prime number"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 2\cf7 ;\cf18 i\cf7 <=\cf18 limit\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf4 int\cf6  \cf13 flag\cf7 =\cf14 1\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 j\cf7 =\cf14 2\cf7 ;\cf18 j\cf7 <\cf18 i\cf7 ;\cf18 j\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf4 if\cf10 (\cf18 i\cf7 %\cf18 j\cf7 ==\cf14 0\cf10 )\cf8\par
\cf6\tab\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\tab\cf18 flag\cf7 =\cf14 0\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\tab\cf4 break\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\tab\cf4 if\cf10 (\cf18 flag\cf7 ==\cf14 1\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "%d"\cf7 ,\cf18 i\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf4 break\cf7 ;\cf8\par
\cf6\tab\tab\cf8\par
\cf4 case\cf6  \cf14 2\cf7 :\cf6  \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "perfect number\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 1\cf7 ;\cf18 i\cf7 <=\cf18 limit\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf18 sum\cf7 =\cf14 0\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 j\cf7 =\cf14 1\cf7 ;\cf18 j\cf7 <\cf18 i\cf7 ;\cf18 j\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf4 if\cf10 (\cf18 i\cf7 %\cf18 j\cf7 ==\cf14 0\cf10 )\cf8\par
\cf6\tab\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\tab\cf18 sum\cf7 =\cf18 sum\cf7 +\cf18 j\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\tab\cf4 if\cf10 (\cf18 sum\cf7 ==\cf18 i\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "%d\\n"\cf7 ,\cf18 i\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf4 case\cf6  \cf14 3\cf7 :\cf6  \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "duck number\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 1\cf7 ;\cf18 i\cf7 <=\cf18 limit\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf4 int\cf6  \cf13 rem\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf4 int\cf6  \cf13 no\cf7 =\cf18 i\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf4 int\cf6  \cf13 flag\cf7 =\cf14 0\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf4 while\cf10 (\cf18 no\cf7 !=\cf14 0\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf18 rem\cf7 =\cf18 no\cf7 %\cf14 10\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf4 if\cf10 (\cf18 rem\cf7 ==\cf14 0\cf10 )\cf8\par
\cf6\tab\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\tab\cf18 flag\cf7 =\cf14 1\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\tab\cf4 break\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\tab\tab\cf18 no\cf7 =\cf18 no\cf7 /\cf14 10\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\tab\cf4 if\cf10 (\cf18 flag\cf7 ==\cf14 1\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "%d\\n"\cf7 ,\cf18 i\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf4 case\cf6  \cf14 4\cf7 :\cf6  \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "fibonacci series\\n"\cf10 )\cf7 ;\cf8\par
\cf6         \cf8\par
\cf4 int\cf6  \cf13 f1\cf7 =\cf14 0\cf7 ,\cf13 f2\cf7 =\cf14 1\cf7 ,\cf13 fib\cf7 ;\cf8\par
\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 2\cf7 ;\cf18 i\cf7 <=\cf18 limit\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf18 fib\cf7 =\cf18 f1\cf7 +\cf18 f2\cf7 ;\cf8\par
\cf6\tab\cf18 f1\cf7 =\cf18 f2\cf7 ;\cf8\par
\cf6\tab\cf18 f2\cf7 =\cf18 fib\cf7 ;\cf8\par
\cf6\tab\cf4 if\cf10 (\cf18 fib\cf7 <\cf18 limit\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "%d\\n"\cf7 ,\cf18 fib\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 else\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 break\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 default\cf7 :\cf6  \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "invalid input"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf1\highlight0\b\f0 **** Two dimensional array*****\par
\cf20 Two dimensional array is used for create matrix.\par
Syntax: datatype variablename[][]=new datatype[size][size];\par
Ex. Int a[][]=new int[3][3];\par
\cf1 Q. write a program to insert value in two dimensional array and display it.\par
\cf20 Ans:- \par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 twodimensional\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 a\cf10 [][]\cf7 =\cf4 new\cf6  \cf4 int\cf10 [\cf14 2\cf10 ][\cf14 2\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter value in array\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf18 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 j\cf7 =\cf14 0\cf7 ;\cf18 j\cf7 <\cf18 a\cf7 .\cf19 length\cf7 ;\cf18 j\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf18 a\cf10 [\cf18 i\cf10 ][\cf18 j\cf10 ]\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "display value from array\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf18 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 j\cf7 =\cf14 0\cf7 ;\cf18 j\cf7 <\cf18 a\cf7 .\cf19 length\cf7 ;\cf18 j\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "%d\\t"\cf7 ,\cf18 a\cf10 [\cf18 i\cf10 ][\cf18 j\cf10 ])\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf8\par
\cf6\tab\cf10\}\cf8\par
\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf20\highlight0\b\f0\par
\par
\par
\cf1 Q. what is jagged array?\par
\cf20 Ans: in jagged array we can create matrix of every row having different column.\par
Q. write a program to perform jagged array ?\par
Ans:\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 twodimensional\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf8\par
\cf6\tab\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 a\cf10 [][]\cf7 =\cf4 new\cf6  \cf4 int\cf10 [\cf14 3\cf10 ][]\cf7 ;\cf8\par
\cf6\tab\tab\cf18 a\cf10 [\cf14 0\cf10 ]\cf7 =\cf4 new\cf6  \cf4 int\cf10 [\cf14 3\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\cf18 a\cf10 [\cf14 1\cf10 ]\cf7 =\cf4 new\cf6  \cf4 int\cf10 [\cf14 4\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\cf18 a\cf10 [\cf14 2\cf10 ]\cf7 =\cf4 new\cf6  \cf4 int\cf10 [\cf14 2\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter value in array\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf18 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 j\cf7 =\cf14 0\cf7 ;\cf18 j\cf7 <\cf18 a\cf10 [\cf18 i\cf10 ]\cf7 .\cf19 length\cf7 ;\cf18 j\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf18 a\cf10 [\cf18 i\cf10 ][\cf18 j\cf10 ]\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "display value from array\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf18 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 j\cf7 =\cf14 0\cf7 ;\cf18 j\cf7 <\cf18 a\cf10 [\cf18 i\cf10 ]\cf7 .\cf19 length\cf7 ;\cf18 j\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "%d\\t"\cf7 ,\cf18 a\cf10 [\cf18 i\cf10 ][\cf18 j\cf10 ])\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf8\par
\cf6\tab\cf10\}\cf8\par
\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf20\highlight0\b\f0\par
\par
\par
\cf1 Q. what is class and object?\par
\cf20 Ans: class is combination of state and behavior or combination of variable and function.\par
Class is a combination of instance variable, class variable , method, constructor, static initializer, instance initializer, nested class.\par

\pard{\pntext\f5\'B7\tab}{\*\pn\pnlvlblt\pnf5\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa160\sl252\slmult1 Instance variable: instance variable means variable declare within class without static keyword.\par
{\pntext\f5\'B7\tab}Class variable: class variable means variable declare within class as static keyword.\par
{\pntext\f5\'B7\tab}Method: define function within class called as method.\par
{\pntext\f5\'B7\tab}Instance initializer: define block within class called as instance initializer.\par
{\pntext\f5\'B7\tab}Static initializer: define static block within class called as static initializer.\par
{\pntext\f5\'B7\tab}Nested class : class within class called as nested class.\par

\pard\widctlpar\sa160\sl252\slmult1\par
\cf1 Q. why use class or what is benefit of class?\par
\cf20 Ans:  there are three benefit of class\par
1.ability to store different type of data.\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 employee\cf6  \cf8\par
\cf10\{\cf8\par
\cf4 private\cf6  \cf4 int\cf6  \cf19 id\cf7 ;\cf8\par
\cf4 private\cf6  \cf4 int\cf6  \cf19\highlight26 sal\cf7\highlight5 ;\cf8\par
\cf4 private\cf6  \cf9 String\cf6  \cf19 name\cf7 ;\cf8\par
\par
\cf4 public\cf6  \cf4 void\cf6  \cf11 setdetail\cf10 (\cf9 String\cf6  \cf12 name\cf7 ,\cf4 int\cf6  \cf12 id\cf7 ,\cf4 int\cf6  \cf12 sal\cf10 )\cf8\par
\cf10\{\cf8\par
\cf4 this\cf7 .\cf19 name\cf7 =\cf12 name\cf7 ;\cf8\par
\cf4 this\cf7 .\cf19 id\cf7 =\cf12 id\cf7 ;\cf8\par
\cf4 this\cf7 .\cf19\highlight26 sal\cf7\highlight5 =\cf12 sal\cf7 ;\cf8\par
\cf10\}\cf8\par
\cf4 void\cf6  \cf11 show\cf10 ()\cf8\par
\cf10\{\cf8\par
\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "%s %d %d"\cf7 ,\cf4 this\cf7 .\cf19 name\cf7 ,\cf4 this\cf7 .\cf19 id\cf7 ,\cf4 this\cf7 .\cf19\highlight26 sal\cf10\highlight5 )\cf7 ;\cf8\par
\cf10\}\cf8\par
\cf10\}\cf8\par
\par
\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf20\highlight0\b\f0 2.provide reusability: means we can declare class once and use it more than one using its object.\par
\par
\cf1 Q. what is object?\par
\cf20 Ans: object is block of memory where we can store class data, or object is instance of class.\par
\cf1 Q. how to create object in java?\par
\cf20 Ans: classname ref=new classname();\par
Employee emp=new employee();\par
\cf1 Q. what is difference between reference and object?\par
\cf20 Ans: reference is variable which hold address of object and object is a block of memory where class data store.\par
\par
\cf1 Q. write a program to print square of number using object?\par
\cf20 Ans:\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 class\cf6  \cf9 square\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 int\cf6  \cf19\highlight26 no\cf7\highlight5 ;\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 setvalue\cf10 (\cf4 int\cf6  \cf12 x\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf19\highlight26 no\cf7\highlight5 =\cf12 x\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 showsquare\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 sq\cf7 =\cf19\highlight26 no\cf7\highlight5 *\cf19\highlight26 no\cf7\highlight5 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "square is %d"\cf7 ,\cf18 sq\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 squareapplication\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf6  \cf10 []\cf12 args\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 square\cf6  \cf13 s\cf7 =\cf4 new\cf6  \cf15 square\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter number\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 no\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18 s\cf7 .\cf15 setvalue\cf10 (\cf18 no\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf18 s\cf7 .\cf15 showsquare\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf8\par
\cf6\tab\cf10\}\cf8\par
\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf20\highlight0\b\f0\par
\cf1  Q. what happen if we not use reference with object ?\par
\cf20 Ans: if we not use reference with object then jvm create new  object every time in memory.\par
\par
\cf1 Q. why use reference with object ?\par
Ans:\par
\cf20 When we want use some object multiple time then we can use reference with object.\par
\par
\cf1 Q. can we apply more than one reference on single object?\par
\cf20 Ans: yes, we can apply more than one reference on single object if perform any changes on object then old content may be lost or override.\par
\cf1 Q. write a program create classname reverse with two value \par
Void setvalue(int no)\par
Int getreverse()\par
Ans:\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf6  \cf4 class\cf6  \cf9 rev\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 int\cf6  \cf19 no\cf7 ;\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 setvalue\cf10 (\cf4 int\cf6  \cf12 no\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 no\cf7 =\cf12 no\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 int\cf6  \cf11 getreverse\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf6  \cf4 int\cf6  \cf13 r\cf7 =\cf14 0\cf7 ,\cf13 rem\cf7 ;\cf8\par
\cf6\tab\cf4 while\cf10 (\cf19 no\cf7 !=\cf14 0\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf18 rem\cf7 =\cf19 no\cf7 %\cf14 10\cf7 ;\cf8\par
\cf6\tab\tab\cf19 no\cf7 =\cf19 no\cf7 /\cf14 10\cf7 ;\cf8\par
\cf6\tab\tab\cf18 r\cf7 =\cf18 r\cf7 *\cf14 10\cf7 +\cf18 rem\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 return\cf6  \cf18 r\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 reverse\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf12 args\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 rev\cf6  \cf13 ra\cf7 =\cf4 new\cf6  \cf15 rev\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter number\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 no\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18 ra\cf7 .\cf15 setvalue\cf10 (\cf18 no\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 result\cf7 =\cf18 ra\cf7 .\cf15 getreverse\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "reverse is:   "\cf7 +\cf18 result\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par

\pard\widctlpar\sa160\sl252\slmult1\cf1\highlight0\b\f0\par
Q. wap to create class name as percentage with two value\par
 void setvalue() \par
void getper()\par
Ans: \par
\cf20\par
\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 class\cf6  \cf9 percent\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 int\cf6  \cf19 sub1\cf7 ,\cf19 sub2\cf7 ,\cf19 sub3\cf7 ,\cf19 sub4\cf7 ,\cf19 sub5\cf7 ;\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 setvalue\cf10 (\cf4 int\cf6  \cf12 s1\cf7 ,\cf4 int\cf6  \cf12 s2\cf7 ,\cf4 int\cf6  \cf12 s3\cf7 ,\cf4 int\cf6  \cf12 s4\cf7 ,\cf4 int\cf6  \cf12 s5\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf19 sub1\cf7 =\cf12 s1\cf7 ;\cf8\par
\cf6\tab\tab\cf19 sub2\cf7 =\cf12 s2\cf7 ;\cf8\par
\cf6\tab\tab\cf19 sub3\cf7 =\cf12 s3\cf7 ;\cf8\par
\cf6\tab\tab\cf19 sub4\cf7 =\cf12 s4\cf7 ;\cf8\par
\cf6\tab\tab\cf19 sub5\cf7 =\cf12 s5\cf7 ;\cf6\tab\tab\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 int\cf6  \cf11 getpercent\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 agg\cf7 =\cf14 0\cf7 ;\cf8\par
\cf6\tab\tab\cf18 agg\cf7 =\cf19 sub1\cf7 +\cf19 sub2\cf7 +\cf19 sub3\cf7 +\cf19 sub4\cf7 +\cf19 sub5\cf7 ;\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf18 agg\cf7 /\cf14 5\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 percentage\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf6    \cf4 int\cf6  \cf13 s1\cf7 ,\cf13 s2\cf7 ,\cf13 s3\cf7 ,\cf13 s4\cf7 ,\cf13 s5\cf7 ;\cf8\par
\cf6\tab\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab   \cf9 percent\cf6  \cf13 p\cf7 =\cf4 new\cf6  \cf15 percent\cf10 ()\cf7 ;\cf8\par
\cf6\tab   \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter subject mark\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab   \cf18 s1\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab   \cf18 s2\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab   \cf18 s3\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab   \cf18 s4\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab   \cf18 s5\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab   \cf18 p\cf7 .\cf15 setvalue\cf10 (\cf18 s1\cf7 ,\cf18 s2\cf7 ,\cf18 s3\cf7 ,\cf18 s4\cf7 ,\cf18 s5\cf10 )\cf7 ;\cf8\par
\cf6\tab   \cf4 int\cf6  \cf13 result\cf7 =\cf18 p\cf7 .\cf15 getpercent\cf10 ()\cf7 ;\cf8\par
\cf6\tab   \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "percentage is : "\cf7 +\cf18 result\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf20\highlight0\b\f0\par
\par
\par
\par
\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 class\cf6  \cf9 percent\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 int\cf6  \cf19 i\cf7 ,\cf19\highlight26 a\cf10\highlight5 []\cf7 ,\cf19 agg\cf7 =\cf14 0\cf7 ;\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 setvalue\cf10 (\cf4 int\cf6  \cf12 a\cf10 [])\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19\highlight26 a\cf7\highlight5 =\cf12 a\cf7 ;\cf6\tab\tab\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf8\par
\cf6\tab\cf4 int\cf6  \cf11 getpercent\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf19\highlight26 a\cf7\highlight5 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\cf19 agg\cf7 =\cf19 agg\cf7 +\cf19\highlight26 a\cf10\highlight5 [\cf18 i\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf19 agg\cf7 /\cf14 5\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf6\tab\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 percentage\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf6    \cf4 int\cf6  \cf13 a\cf10 []\cf7 =\cf4 new\cf6  \cf4 int\cf10 [\cf14 5\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab   \cf9 percent\cf6  \cf13 p\cf7 =\cf4 new\cf6  \cf15 percent\cf10 ()\cf7 ;\cf8\par
\cf6\tab   \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter subject mark\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab   \cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf18 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab   \cf10\{\cf8\par
\cf6\tab\tab   \cf18 a\cf10 [\cf18 i\cf10 ]\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab   \cf10\}\cf8\par
\cf6\tab   \cf18 p\cf7 .\cf15 setvalue\cf10 (\cf18 a\cf10 )\cf7 ;\cf8\par
\cf6\tab   \cf4 int\cf6  \cf13 result\cf7 =\cf18 p\cf7 .\cf15 getpercent\cf10 ()\cf7 ;\cf8\par
\cf6\tab   \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "percentage is : "\cf7 +\cf18 result\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf20\highlight0\b\f0\par
\cf1 Q. write a program to find max number with function \par
Void setvalue()\par
Int getmax()\par
\cf20 Ans:\par
\par
\cf1\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 class\cf6  \cf9 findmax\cf8\par
\cf10\{\cf8\par
\cf6  \cf4 int\cf10 []\cf6  \cf19 arr\cf7 ;\cf8\par
\cf6  \cf4 void\cf6  \cf11 setvalue\cf10 (\cf4 int\cf6  \cf12 a\cf10 [])\cf8\par
\cf6  \cf10\{\cf8\par
\cf6\tab  \cf19 arr\cf7 =\cf12 a\cf7 ;\cf8\par
\cf6  \cf10\}\cf6  \cf8\par
\cf6  \cf4 int\cf6  \cf11 getmax\cf10 ()\cf8\par
\cf6  \cf10\{\cf8\par
\cf6\tab  \cf4 int\cf6  \cf13 max\cf7 =\cf19 arr\cf10 [\cf14 0\cf10 ]\cf7 ;\cf8\par
\cf6\tab  \cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf19 arr\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab  \cf10\{\cf8\par
\cf6\tab\tab  \cf4 if\cf10 (\cf19 arr\cf10 [\cf18 i\cf10 ]\cf7 >\cf18 max\cf10 )\cf8\par
\cf6\tab\tab  \cf10\{\cf8\par
\cf6\tab\tab\tab  \cf18 max\cf7 =\cf19 arr\cf10 [\cf18 i\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab  \cf10\}\cf8\par
\cf6\tab  \cf10\}\cf8\par
\cf6\tab  \cf4 return\cf6  \cf18 max\cf7 ;\cf8\par
\cf6  \cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 findmaxapplication\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf6    \cf4 int\cf6  \cf13 a\cf10 []\cf7 =\cf4 new\cf6  \cf4 int\cf10 [\cf14 5\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 findmax\cf6  \cf13 f\cf7 =\cf4 new\cf6  \cf15 findmax\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter value\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf18 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf18 a\cf10 [\cf18 i\cf10 ]\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf18 f\cf7 .\cf15 setvalue\cf10 (\cf18 a\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 max\cf7 =\cf18 f\cf7 .\cf15 getmax\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "max is  :  "\cf7 +\cf18 max\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf1\highlight0\b\f0\par
Q. what is sorting?\par
Ans: \cf0 sorting is technique, with the help of sorting we can organize data in ascending or descending format.\par
Types of sorting\par
\cf1 1.bubble sort: \cf0 bubble sort is algorithm is simplest sorting algorithm that work by a repeatedly swapping the adjustment \par
\cf1 We have array int a[]=\{5,2,4,9\} and we want to arrange in ascending order.\par

\pard\widctlpar\cf0\highlight5\f3   \cf4\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 class\cf6  \cf9 sort\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 int\cf6  \cf19 arr\cf10 []\cf7 ;\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 setvalue\cf10 (\cf4 int\cf6  \cf12 arr\cf10 [])\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 arr\cf7 =\cf12 arr\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\tab\cf8\par
\cf6\tab\cf4 int\cf10 []\cf6  \cf11 sortArr\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf19 arr\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab  \cf10\{\cf8\par
\cf6\tab\tab\tab  \cf4 for\cf10 (\cf4 int\cf6  \cf13 j\cf7 =\cf14 0\cf7 ;\cf18 j\cf7 <\cf19 arr\cf7 .\cf19 length\cf7 ;\cf18 j\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\tab  \cf10\{\cf8\par
\cf6\tab\tab\tab\tab  \cf4 if\cf10 (\cf19 arr\cf10 [\cf18 i\cf10 ]\cf7 <\cf19 arr\cf10 [\cf18 j\cf10 ])\cf8\par
\cf6\tab\tab\tab\tab  \cf10\{\cf8\par
\cf6\tab\tab\tab\tab  \cf4 int\cf6  \cf13 temp\cf7 =\cf19 arr\cf10 [\cf18 i\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab  \cf19 arr\cf10 [\cf18 i\cf10 ]\cf7 =\cf19 arr\cf10 [\cf18 j\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab  \cf19 arr\cf10 [\cf18 j\cf10 ]\cf7 =\cf18 temp\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab  \cf10\}\cf8\par
\cf6\tab\tab\tab  \cf10\}\cf8\par
\cf6\tab\tab  \cf10\}\cf8\par
\cf6\tab\tab  \cf4 return\cf6  \cf19 arr\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\cf10\}\cf8\par
\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 bubblesort\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf6   \cf4 int\cf6  \cf13 a\cf10 []\cf7 =\cf4 new\cf6  \cf4 int\cf10 [\cf14 5\cf10 ]\cf7 ;\cf8\par
\cf6\tab    \cf9 sort\cf6  \cf13 s\cf7 =\cf4 new\cf6  \cf15 sort\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter array element\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf18 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf18 a\cf10 [\cf18 i\cf10 ]\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf18 s\cf7 .\cf15 setvalue\cf10 (\cf18 a\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf10 []\cf13\ul result\cf7\ulnone =\cf18 s\cf7 .\cf15 sortArr\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "display array\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf18 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "%d\\n"\cf7 ,\cf18 a\cf10 [\cf18 i\cf10 ])\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight0\b\f0\par
\cf1 Q. selection sort?\par
\cf0 Ans: selected smallest and largest element from sorted and unsorted array.\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\par
\cf4 class\cf6  \cf9 selection\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 int\cf6  \cf19 a\cf10 []\cf7 ;\cf8\par
\cf4 void\cf6  \cf11 acceptvalue\cf10 (\cf4 int\cf6  \cf12 arr\cf10 [])\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf19 a\cf6  \cf7 =\cf6  \cf12 arr\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf4 void\cf6  \cf11 performselection\cf10 ()\cf6  \cf10\{\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 i\cf7 ,\cf6  \cf13 j\cf7 ,\cf6  \cf13 min\cf6  \cf7 =\cf6  \cf14 0\cf7 ,\cf6  \cf13 temp\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf6  \cf10 (\cf18 i\cf6  \cf7 =\cf6  \cf14 0\cf7 ;\cf6  \cf18 i\cf6  \cf7 <\cf6  \cf10 (\cf19 a\cf7 .\cf19 length\cf6  \cf7 -\cf6  \cf14 1\cf10 )\cf7 ;\cf6  \cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf4 for\cf6  \cf10 (\cf18 j\cf6  \cf7 =\cf6  \cf18 i\cf6  \cf7 +\cf6  \cf14 1\cf7 ;\cf6  \cf18 j\cf6  \cf7 <\cf6  \cf19 a\cf7 .\cf19 length\cf7 ;\cf6  \cf18 j\cf7 ++\cf10 )\cf6  \cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf4 if\cf6  \cf10 (\cf19 a\cf10 [\cf18 i\cf10 ]\cf6  \cf7 <\cf6  \cf19 a\cf10 [\cf18 min\cf10 ])\cf8\par
\cf6\tab\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\tab\cf18 min\cf6  \cf7 =\cf6  \cf18 j\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\tab\cf4 if\cf6  \cf10 (\cf18 min\cf7 !=\cf6  \cf18 i\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf18 temp\cf6  \cf7 =\cf6  \cf19 a\cf10 [\cf18 i\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf19 a\cf10 [\cf18 i\cf10 ]\cf6  \cf7 =\cf6  \cf19 a\cf10 [\cf18 j\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\tab\tab\cf19 a\cf10 [\cf18 j\cf10 ]\cf6  \cf7 =\cf6  \cf18 temp\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\cf10\}\cf8\par
\par
\cf6\tab\cf4 void\cf6  \cf11 printarray\cf10 ()\cf6  \cf10\{\cf8\par
\cf6\tab\tab\cf4 for\cf6  \cf10 (\cf4 int\cf6  \cf13 i\cf6  \cf7 =\cf6  \cf14 0\cf7 ;\cf6  \cf18 i\cf6  \cf7 <\cf6  \cf19 a\cf7 .\cf19 length\cf7 ;\cf6  \cf18 i\cf7 ++\cf10 )\cf6  \cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "%d"\cf7 ,\cf6  \cf19 a\cf10 [\cf18 i\cf10 ])\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 selectionsortapp\cf6  \cf10\{\cf8\par
\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf10\{\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 a\cf10 []\cf6  \cf7 =\cf6  \cf4 new\cf6  \cf4 int\cf10 [\cf14 5\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf6\ulnone  \cf7 =\cf6  \cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter  value\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf6  \cf10 (\cf4 int\cf6  \cf13 i\cf6  \cf7 =\cf6  \cf14 0\cf7 ;\cf6  \cf18 i\cf6  \cf7 <\cf6  \cf18 a\cf7 .\cf19 length\cf7 ;\cf6  \cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf18 a\cf10 [\cf18 i\cf10 ]\cf6  \cf7 =\cf6  \cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf9 selection\cf6  \cf13 s\cf6  \cf7 =\cf6  \cf4 new\cf6  \cf15 selection\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18 s\cf7 .\cf15 acceptvalue\cf10 (\cf18 a\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf18 s\cf7 .\cf15 performselection\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "display array after sorting\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf18 s\cf7 .\cf15 printarray\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight0\b\f0\par
\cf1 Q. time complexity of analysis of selection sort.\par
\cf0 Time complexity of selection sort is o(n)^2 as there 2 nested loop one loop select smallest element of array .\par
0(n) x 0(n)=0(n)^2\par
\cf1 Advantage of selection sort \par
\cf0 1.simple and easy to understand\par
2.work with small data set.\par
\cf1 Disadvantage \par
\cf0 1.selection sort has time complexity is (0(nxn)) in the work case of average cast \par
2.does not work with large data.\par
\par
\cf1 Merge sort : \cf0 work by dividing on array into smaller sub array.\par
\cf1 Method with variable argument concept \cf0\par
Method with variable concept where we can pass infinite number of parameter to function \par
It is denoted by \'85(triple dot)\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 class\cf6  \cf9 sum\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 int\cf6  \cf19 sum\cf7 ;\cf8\par
\cf6\tab\cf4 void\cf6  \cf11\ul sum\cf10 (\cf4 int\cf7 ...\cf12 a\cf10 )\cf8\ulnone\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf12 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf19 sum\cf7 =\cf19 sum\cf7 +\cf12 a\cf10 [\cf18 i\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "sum is %d"\cf7 ,\cf19 sum\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 sumapp\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 sum\cf6  \cf13 s\cf7 =\cf4 new\cf6  \cf15 sum\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18 s\cf7 .\cf15 sum\cf10 (\cf14 10\cf7 ,\cf14 20\cf7 ,\cf14 30\cf7 ,\cf14 40\cf7 ,\cf14 60\cf10 )\cf7 ;\cf8\par
\par
\cf6\tab\cf10\}\cf8\par
\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight0\b\f0\par

\pard\widctlpar\cf22\highlight2\f2 package\cf20\b0  wellman;\par
\cf22\b import\cf20\b0  java.util.Scanner;\par
\par
\cf22\b class\cf20\b0  sum\par
\{ \par
\cf22\b int\cf20\b0  \cf24 sum\cf20 ,\cf24 a\cf20 [];\par
\cf22\b void\cf20\b0  \ul sum(\cf22\b int\cf20\b0 ...\cf23 a\cf20 )\ulnone\par
\{\par
\tab\cf22\b for\cf20\b0 (\cf22\b int\cf20\b0  \cf23 i\cf20 =0;\cf23 i\cf20 <\cf23 a\cf20 .\cf24 length\cf20 ;\cf23 i\cf20 ++)\par
\tab\{\par
\tab\tab\cf24 sum\cf20 =\cf24 sum\cf20 +\cf23 a\cf20 [\cf23 i\cf20 ];\par
\tab\}\par
\tab System.\cf24\b\i out\cf20\b0\i0 .printf(\cf25 "sum is %d"\cf20 ,\cf24 sum\cf20 );\par
\}\par
\}\par
\cf22\b public\cf20\b0  \cf22\b class\cf20\b0  mergesort\par
\{ \par
\tab\cf22\b public\cf20\b0  \cf22\b static\cf20\b0  \cf22\b void\cf20\b0  main(String[]\cf23 args\cf20 )\par
\tab\{\par
\tab\tab\cf22\b int\cf20\b0  \cf23 a\cf20 []=\cf22\b new\cf20\b0  \cf22\b int\cf20\b0 [3];\par
\tab\tab Scanner \cf23\ul xyz\cf20\ulnone =\cf22\b new\cf20\b0  Scanner(System.\cf24\b\i in\cf20\b0\i0 );\par
\tab\tab System.\cf24\b\i out\cf20\b0\i0 .println(\cf25 "enter number"\cf20 );\par
\tab\tab\cf22\b for\cf20\b0 (\cf22\b int\cf20\b0  \cf23 i\cf20 =0;\cf23 i\cf20 <\cf23 a\cf20 .\cf24 length\cf20 ;\cf23 i\cf20 ++)\par
\tab\tab\{\par
\tab\tab\tab\cf23 a\cf20 [\cf23 i\cf20 ]=\cf23 xyz\cf20 .nextInt();\par
\tab\tab\}\par
\tab\tab sum \cf23 s\cf20 =\cf22\b new\cf20\b0  sum();\par
\tab\tab\cf23 s\cf20 .sum(\cf23 a\cf20 );\par
\tab\}\par
\}\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight0\b\f0\par
\par
\par
\par
\par
\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 class\cf6  \cf9 sum\cf8\par
\cf10\{\cf6\tab\cf4 int\cf6  \cf19 sum\cf7 ;\cf8\par
\cf6\tab\cf4 void\cf6  \cf11\ul sum\cf10 (\cf9 String\cf6  \cf12 name\cf7 ,\cf4 int\cf7 ...\cf12 a\cf10 )\cf8\ulnone\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "name is :"\cf7 +\cf12 name\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf12 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf19 sum\cf7 =\cf19 sum\cf7 +\cf12 a\cf10 [\cf18 i\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "sum is %d"\cf7 ,\cf19 sum\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 sumapp\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 sum\cf6  \cf13 s\cf7 =\cf4 new\cf6  \cf15 sum\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18 s\cf7 .\cf15 sum\cf10 (\cf17 "ram"\cf7 ,\cf14 10\cf7 ,\cf14 20\cf7 ,\cf14 30\cf7 ,\cf14 40\cf7 ,\cf14 60\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight0\b\f0\par
Q. POJO class :\par
Pojo class means class with setter and getter method called as pojo class.\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  \ul java\cf7 .\cf6 util\cf7\ulnone .*;\cf8\par
\cf4 class\cf6  \cf9 employee\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 private\cf6  \cf4 int\cf6  \cf19 id\cf7 ;\cf8\par
\cf6\tab\cf4 private\cf6  \cf9 String\cf6  \cf19 name\cf7 ;\cf8\par
\cf6\tab\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 setid\cf10 (\cf4 int\cf6  \cf12 id\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 id\cf7 =\cf12 id\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 int\cf6  \cf11 getid\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf19 id\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 setname\cf10 (\cf9 String\cf6  \cf12 name\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 name\cf7 =\cf12 name\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf9 String\cf6  \cf11 getname\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf19 name\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 pojoclass\cf6  \cf10\{\cf8\par
\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 employee\cf6  \cf13 emp\cf7 =\cf4 new\cf6  \cf15 employee\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18 emp\cf7 .\cf15 setid\cf10 (\cf14 1\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf18 emp\cf7 .\cf15 setname\cf10 (\cf17 "amol"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf18 emp\cf7 .\cf15 getid\cf10 ()\cf7 +\cf17 "\\t"\cf7 +\cf18 emp\cf7 .\cf15 getname\cf10 ())\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight0\b\f0\par
\cf1 Q. create class name as player and field record as name id and run and create pojo class and store data in it and retrive data .\par
Ans:\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 class\cf6  \cf9 player\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 private\cf6  \cf4 int\cf6  \cf19 id\cf7 ;\cf8\par
\cf6\tab\cf4 private\cf6  \cf4 int\cf6  \cf19 run\cf7 ;\cf8\par
\cf6\tab\cf4 private\cf6  \cf9 String\cf6  \cf19 name\cf7 ;\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 int\cf6  \cf11 getId\cf10 ()\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf19 id\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 setId\cf10 (\cf4 int\cf6  \cf12 id\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 id\cf6  \cf7 =\cf6  \cf12 id\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 int\cf6  \cf11 getRun\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf19 run\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 setRun\cf10 (\cf4 int\cf6  \cf12 run\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 run\cf6  \cf7 =\cf6  \cf12 run\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf9 String\cf6  \cf11 getName\cf10 ()\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf19 name\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 setName\cf10 (\cf9 String\cf6  \cf12 name\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 name\cf6  \cf7 =\cf6  \cf12 name\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 playerrecord\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 player\cf6  \cf13 p\cf7 =\cf4 new\cf6  \cf15 player\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18 p\cf7 .\cf15 setId\cf10 (\cf14 1\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf18 p\cf7 .\cf15 setName\cf10 (\cf17 "amol"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf18 p\cf7 .\cf15 setRun\cf10 (\cf14 100\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "name is: "\cf7 +\cf18 p\cf7 .\cf15 getName\cf10 ())\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "id is: "\cf7 +\cf18 p\cf7 .\cf15 getId\cf10 ())\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "run is: "\cf7 +\cf18 p\cf7 .\cf15 getRun\cf10 ())\cf7 ;\cf6\tab\tab\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight0\b\f0\par
\cf1 Q. write a program to create a class name as company with two method void add employee(String name ,int id, String name)\par
Void showdetail()\par
Ans: \par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 class\cf6  \cf9 company\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 private\cf6  \cf9 String\cf6  \cf19 name\cf7 ;\cf8\par
\cf6\tab\cf4 private\cf6  \cf4 int\cf6  \cf19 id\cf7 ;\cf8\par
\cf6\tab\cf4 private\cf6  \cf9 String\cf6  \cf19 address\cf7 ;\cf8\par
\cf6\tab\cf4 private\cf6  \cf4 int\cf6  \cf19\highlight26 sal\cf7\highlight5 ;\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 addemployee\cf10 (\cf4 int\cf6  \cf12 id\cf7 ,\cf9 String\cf6  \cf12 name\cf7 ,\cf9 String\cf6  \cf12 address\cf7 ,\cf4 int\cf6  \cf12 sal\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 id\cf7 =\cf12 id\cf7 ;\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 name\cf7 =\cf12 name\cf7 ;\cf6\tab\tab\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 address\cf7 =\cf12 address\cf7 ;\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19\highlight26 sal\cf7\highlight5 =\cf12 sal\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 showdetail\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf19 id\cf7 +\cf17 "\\n"\cf7 +\cf19 name\cf7 +\cf17 "\\n"\cf7 +\cf19 address\cf7 +\cf17 "\\n"\cf7 +\cf19\highlight26 sal\cf10\highlight5 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 companydetail\cf6  \cf8\par
\cf10\{\cf8\par
\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\cf9 company\cf6  \cf13 c\cf7 =\cf4 new\cf6  \cf15 company\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf18 c\cf7 .\cf15 addemployee\cf10 (\cf14 1\cf7 ,\cf17 "Amol"\cf7 ,\cf17 "hingoli"\cf7 ,\cf14 1500\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf18 c\cf7 .\cf15 showdetail\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight0\b\f0\par
\cf1 Q. write a program create class name as library with two method void addnewbook(String name, int price, String sub)\par
Void display()\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 class\cf6  \cf9 library\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf9 String\cf6  \cf19 name\cf7 ;\cf8\par
\cf6\tab\cf4 int\cf6  \cf19 price\cf7 ;\cf8\par
\cf6\tab\cf9 String\cf6  \cf19 sub\cf7 ;\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 addbook\cf10 (\cf9 String\cf6  \cf12 name\cf7 ,\cf4 int\cf6  \cf12 price\cf7 ,\cf9 String\cf6  \cf12 sub\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 name\cf7 =\cf12 name\cf7 ;\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 price\cf7 =\cf12 price\cf7 ;\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 sub\cf7 =\cf12 sub\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 displaybook\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf19 name\cf7 +\cf17 "\\t"\cf7 +\cf19 price\cf7 +\cf17 "\\t"\cf7 +\cf19 sub\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9\highlight26 libraryrecord\cf6\highlight5  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf6\tab\cf8\par
\cf6       \cf9 library\cf6  \cf13 l\cf7 =\cf4 new\cf6  \cf15 library\cf10 ()\cf7 ;\cf8\par
\cf6       \cf18 l\cf7 .\cf15 addbook\cf10 (\cf17 "java"\cf7 ,\cf6  \cf14 100\cf7 ,\cf17 "core"\cf10 )\cf7 ;\cf8\par
\cf6       \cf18 l\cf7 .\cf15 displaybook\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf1\highlight0\b\f0 Q. write a program create class name as sumevenodd and take method void setarr()\par
And display sum of even and odd.\par
\cf0 Ans:\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 class\cf6  \cf9 sumevenodd\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 int\cf6  \cf19 a\cf10 []\cf7 ;\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 setarr\cf10 (\cf4 int\cf6  \cf12 a\cf10 [])\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 a\cf7 =\cf12 a\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 int\cf6  \cf11 sumeven\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 sum\cf7 =\cf14 0\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf19 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf4 if\cf10 (\cf19 a\cf10 [\cf18 i\cf10 ]\cf7 %\cf14 2\cf7 ==\cf14 0\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf18 sum\cf7 =\cf18 sum\cf7 +\cf19 a\cf10 [\cf18 i\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf18 sum\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 int\cf6  \cf11 sumodd\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf6  \cf4 int\cf6  \cf13 sum\cf7 =\cf14 0\cf7 ;\cf6\tab\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf19 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf6  \cf8\par
\cf6\tab\tab\tab\cf4 if\cf10 (\cf19 a\cf10 [\cf18 i\cf10 ]\cf7 %\cf14 2\cf7 ==\cf14 1\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf18 sum\cf7 =\cf18 sum\cf7 +\cf19 a\cf10 [\cf18 i\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf18 sum\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf6\tab\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 evenodd\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf6  \cf4 int\cf6  \cf13 i\cf7 ;\cf8\par
\cf6\tab\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 a\cf10 []\cf7 =\cf4 new\cf6  \cf4 int\cf10 [\cf14 5\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter value in array\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf6  \cf18 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf18 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf18 a\cf10 [\cf18 i\cf10 ]\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf9 sumevenodd\cf6  \cf13 s\cf7 =\cf4 new\cf6  \cf15 sumevenodd\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18 s\cf7 .\cf15 setarr\cf10 (\cf18 a\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 b\cf7 =\cf18 s\cf7 .\cf15 sumeven\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "sum of even is %d"\cf7 ,\cf18 b\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 c\cf7 =\cf18 s\cf7 .\cf15 sumodd\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 printf\cf10 (\cf17 "sum of odd is %d"\cf7 ,\cf18 c\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight0\b\f0\par
\cf1 Q. write a program create class name as circle and show area of circle.\par
\cf0 Ans:\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 class\cf6  \cf9 circle\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 int\cf6  \cf19 no\cf7 ;\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 setradius\cf10 (\cf4 int\cf6  \cf12 x\cf6  \cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf19 no\cf7 =\cf12 x\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab  \cf4 void\cf6  \cf11 showarea\cf10 ()\cf8\par
\cf6\tab  \cf10\{\cf8\par
\cf6\tab     \cf4 float\cf6  \cf13 area\cf7 =\cf14 2\cf7 *\cf14 3.14f\cf7 *\cf19 no\cf7 ;\cf6  \cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "area of circle is  "\cf7 +\cf18 area\cf10 )\cf7 ;\cf8\par
\cf6\tab  \cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 circlearea\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter radius\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 radius\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 circle\cf6  \cf13 c\cf7 =\cf4 new\cf6  \cf15 circle\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18 c\cf7 .\cf15 setradius\cf10 (\cf18 radius\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf18 c\cf7 .\cf15 showarea\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf1\highlight0\b\f0 Q. Static variable , local variable, instance variable?\par
Ans: \par
1.static variable: \par
\cf0 1.variable declare within class with static keyword called as static variable.\par
2.static variable allocate its memory before creating its object of class.\par
3.static variable access by using classname.membername . static variable access in static function as well as non-static function.\par
4.life of static variable is present when application running in memory.\par
\cf1 2.Instance variable:\par
\cf0 1.variable declare within class without static keyword called as instance variable.\par
2.instance variable allocate its memory after creating its object of class and store in object and object store in beap section of memory.\par
3.instance variable access by using object.membername.\par
4.instance variable share sepreate memory for object.\par
Instance variable access in non-static function.\par
5.life of instance variable when object is running in memory.\par
\par
\cf1 Local variable:\par
\cf0 1.variable declare within function called as local variable.\par
2.local variable allocate memory after calling function and store in stack section.\par
3.acess local variable by calling function you cant access outside of his block.\par
4.life of local variable is when function in execution.\par
\par
\cf1 Q. what is garbage collection?\par
\cf0 Ans: garbage collection is automatic management technique of jvm which release or delete memory of object when object is not in use.\par
\cf1 Q. how JVM find object is not in use.\par
\cf0 Ans: when object not use any reference then JVM consider object not in use and JVM delete memory of that object.\par
\cf1\par
Q. array of object.\par
\cf0 Ans; array of object is used for store multiple object data in single name reference called as array of object.\par
Classname ref[]=new classname[size];\par
For(int i=0;i<ref.length;i++)\par
\{\par
Ref[i]=new classname(); //array of object\par
\}\par
\cf1\par
\par
\par
\par
\par
Q. create classname as employee with field id name and salary and we want to create array of object of size 5 and store data in.\par
Ans:\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 class\cf6  \cf9 employeeapp\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 private\cf6  \cf4 int\cf6  \cf19 id\cf7 ;\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 int\cf6  \cf11 getId\cf10 ()\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf19 id\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 setId\cf10 (\cf4 int\cf6  \cf12 id\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 id\cf6  \cf7 =\cf6  \cf12 id\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf9 String\cf6  \cf11 getName\cf10 ()\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf19 name\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 setName\cf10 (\cf9 String\cf6  \cf12 name\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 name\cf6  \cf7 =\cf6  \cf12 name\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 int\cf6  \cf11 getSal\cf10 ()\cf6  \cf8\par
\cf6\tab\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf19 sal\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 setSal\cf10 (\cf4 int\cf6  \cf12 sal\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 sal\cf6  \cf7 =\cf6  \cf12 sal\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 private\cf6  \cf9 String\cf6  \cf19 name\cf7 ;\cf8\par
\cf6\tab\cf4 private\cf6  \cf4 int\cf6  \cf19 sal\cf7 ;\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 employeerecord\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf6  \cf8\par
\cf6\tab\cf9 employeeapp\cf6  \cf13 e\cf10 []\cf7 =\cf4 new\cf6  \cf9 employeeapp\cf10 [\cf14 5\cf10 ]\cf7 ;\cf8\par
\cf6\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf18 e\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf18 e\cf10 [\cf18 i\cf10 ]\cf7 =\cf4 new\cf6  \cf15 employeeapp\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter name id and sal\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf9 String\cf6  \cf13 name\cf7 =\cf18 xyz\cf7 .\cf15\highlight26 next\cf10\highlight5 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 id\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 sal\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18 e\cf10 [\cf18 i\cf10 ]\cf7 .\cf15 setName\cf10 (\cf18 name\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf18 e\cf10 [\cf18 i\cf10 ]\cf7 .\cf15 setId\cf10 (\cf18 id\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf18 e\cf10 [\cf18 i\cf10 ]\cf7 .\cf15 setSal\cf10 (\cf18 sal\cf10 )\cf7 ;\cf6\tab\tab\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "display data\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf18 e\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf18 e\cf10 [\cf18 i\cf10 ]\cf7 .\cf15 getName\cf10 ()\cf7 +\cf17 "\\t"\cf7 +\cf18 e\cf10 [\cf18 i\cf10 ]\cf7 .\cf15 getId\cf10 ()\cf7 +\cf17 "\\t"\cf7 +\cf18 e\cf10 [\cf18 i\cf10 ]\cf7 .\cf15 getSal\cf10 ())\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf1\highlight0\b\f0\par
Q. what is encapsulation?\par
Ans\cf0 ; encapsulation means hide implementation detail from end user at implementation level called as encapsulation.\par
Main goal of encapsulation is data security. When we declare class variable as private we cant access outside of his class .\par
\cf1 Q. what is constructor.\par
\cf0 Ans: constructor is same name as class name without return type.\par
Syntax:\par
 class classname\par
\{\par
Classname()\par
\{ \par
Write \par
\}\par
\cf1 Why use constructor ?\par
\cf0 Execute logic automatically when class object is created \par
Constructor call automatically when we create object of class.\par
\cf1 Q. types of constructor.\par
\cf0 Ans:  \par
\cf1 Default constructor \cf0 : if we declare constructor without parameter called as default constructor. \par
\cf1 Parameterized constructor : \cf0 parameterized constructor means constructor with parameter called as parameterized constructor.  When we pass parameter to constructor then we need to pass parameter to object because constructor calling point is object.\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 class\cf6  \cf9 squar\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 int\cf6  \cf19 num\cf7 ;\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 setsquar\cf10 (\cf4 int\cf6  \cf12 no\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 num\cf7 =\cf12 no\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 int\cf6  \cf11 getsquar\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf19 num\cf7 *\cf19 num\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 squareno\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter number\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf4 int\cf6  \cf13 no\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf9 squar\cf6  \cf13 s\cf7 =\cf4 new\cf6  \cf15 squar\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf18 s\cf7 .\cf15 setsquar\cf10 (\cf18 no\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf4 int\cf6  \cf13 result\cf7 =\cf18 s\cf7 .\cf15 getsquar\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "square is "\cf7 +\cf18 result\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight0\b\f0\par
\cf1 Q. write a program to create class name as findmin with parameterized constructor and take two method one is findmin(int a[]) and one is int getmin().\par
Ans:\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 class\cf6  \cf9 findmin\cf8\par
\cf10\{\cf8\par
\cf6    \cf4 private\cf6  \cf4 int\cf6  \cf19 a\cf10 []\cf7 ;\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11\ul findmin\cf10 (\cf4 int\cf6  \cf12 ar\cf10 [])\cf8\ulnone\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 a\cf7 =\cf12 ar\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 int\cf6  \cf11 getmin\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 min\cf7 =\cf19 a\cf10 [\cf14 0\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf19 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\cf4 if\cf10 (\cf19 a\cf10 [\cf18 i\cf10 ]\cf7 <\cf18 min\cf10 )\cf8\par
\cf6\tab\tab\tab\cf10\{\cf8\par
\cf6\tab\tab\tab\tab\cf18 min\cf7 =\cf19 a\cf10 [\cf18 i\cf10 ]\cf7 ;\cf8\par
\cf6\tab\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf18 min\cf7 ;\cf8\par
\cf6\tab\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 findminium\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf6  \cf4 int\cf6  \cf13 a\cf10 []\cf7 =\cf4 new\cf6  \cf4 int\cf10 [\cf14 5\cf10 ]\cf7 ;\cf8\par
\cf6\tab\cf9 findmin\cf6  \cf13 f\cf7 =\cf4 new\cf6  \cf15 findmin\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter value in array\\n"\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf4 for\cf10 (\cf4 int\cf6  \cf13 i\cf7 =\cf14 0\cf7 ;\cf18 i\cf7 <\cf18 a\cf7 .\cf19 length\cf7 ;\cf18 i\cf7 ++\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf18 a\cf10 [\cf18 i\cf10 ]\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf18 f\cf7 .\cf15 findmin\cf10 (\cf18 a\cf10 )\cf7 ;\cf8\par
\cf6    \cf4 int\cf6  \cf13 result\cf7 =\cf18 f\cf7 .\cf15 getmin\cf10 ()\cf7 ;\cf8\par
\cf6    \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "min value is"\cf7 +\cf18 result\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf1\highlight0\b\f0\par
\cf0\par
\cf1 Overloaded constructor: \cf0 constructor overload means same name constructor with different parameter or different data types called as overloaded constructor. \par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 import\cf6  java\cf7 .\cf6 util\cf7 .*;\cf8\par
\cf4 class\cf6  \cf9 area\cf8\par
\cf10\{\cf8\par
\cf6\tab  \cf4 float\cf6  \cf19 radius\cf7 ;\cf8\par
\cf6\tab  \cf4 int\cf6  \cf19 len\cf7 ,\cf19 wid\cf7 ;\cf8\par
\cf6\tab\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 setcirclearea\cf10 (\cf4 float\cf6  \cf12 radius\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 radius\cf7 =\cf12 radius\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11\highlight26 setcirclearea\cf10\highlight5 (\cf4 int\cf6  \cf12 len\cf7 ,\cf4 int\cf6  \cf12 wid\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 len\cf7 =\cf12 len\cf7 ;\cf8\par
\cf6\tab\tab\cf4 this\cf7 .\cf19 wid\cf7 =\cf12 wid\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 float\cf6  \cf11 getcirclearea\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf10 (\cf19 radius\cf7 *\cf19 radius\cf7 *\cf14 3.14f\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 int\cf6  \cf11 getrectaarea\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf19 len\cf7 *\cf19 wid\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf6\tab\tab\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 areaofcircle\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf12 args\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6      \cf9 Scanner\cf6  \cf13\ul xyz\cf7\ulnone =\cf4 new\cf6  \cf15 Scanner\cf10 (\cf9 System\cf7 .\cf16\b\i in\cf10\b0\i0 )\cf7 ;\cf8\par
\cf6      \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter radius\\n"\cf10 )\cf7 ;\cf8\par
\cf6      \cf4 float\cf6  \cf13 radius\cf7 =\cf18 xyz\cf7 .\cf15 nextFloat\cf10 ()\cf7 ;\cf8\par
\par
\cf6      \cf9 area\cf6  \cf13 a\cf7 =\cf4 new\cf6  \cf15 area\cf10 ()\cf7 ;\cf8\par
\cf6      \cf18 a\cf7 .\cf15 setcirclearea\cf10 (\cf18 radius\cf10 )\cf7 ;\cf8\par
\cf6      \cf18 a\cf7 .\cf15 getrectaarea\cf10 ()\cf7 ;\cf8\par
\cf6      \cf4 float\cf6  \cf13 result\cf7 =\cf18 a\cf7 .\cf15 getcirclearea\cf10 ()\cf7 ;\cf8\par
\cf6      \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "area of circle is\\n"\cf7 +\cf18 result\cf10 )\cf7 ;\cf8\par
\cf6      \cf8\par
\cf6      \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "enter len & wid"\cf10 )\cf7 ;\cf8\par
\cf6      \cf4 int\cf6  \cf13 len\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf8\par
\cf6      \cf4 int\cf6  \cf13 wid\cf7 =\cf18 xyz\cf7 .\cf15 nextInt\cf10 ()\cf7 ;\cf6  \cf8\par
\cf6      \cf9 area\cf6  \cf13 a2\cf7 =\cf4 new\cf6  \cf15 area\cf10 ()\cf7 ;\cf8\par
\cf6      \cf18 a2\cf7 .\cf15\highlight26 setcirclearea\cf10\highlight5 (\cf18 len\cf7 ,\cf18 wid\cf10 )\cf7 ;\cf8\par
\cf6      \cf18 a2\cf7 .\cf15 getrectaarea\cf10 ()\cf7 ;\cf8\par
\cf6      \cf4 int\cf6  \cf13 result2\cf7 =\cf6  \cf18 a2\cf7 .\cf15 getrectaarea\cf10 ()\cf7 ;\cf8\par
\cf6     \cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "area of rectangle is "\cf7 +\cf18 result2\cf10 )\cf7 ;\cf8\par
\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight0\b\f0\par
\cf1 Copy constructor : \par
This constructor   \cf0 : this constructor is used for constructor chaining in oop.\par
\cf1 Q. what is constructor chaining ?\par
\cf0 Ans:  constructor chaining means we can call one constructor within another constructor without creating its object .\par
1.using this constructor \par
2.using super constructor.\par
Constructor cant have a return type but we give return type then it is consider as method in java.\par
Cant declare constructor as static in java \par
Class a\par
\{\par
Public static a()\par
\{\par
System.out.println(\ldblquote I am method\rdblquote );\par
\}\par
\}\par
Class helloword\par
\{\par
Public static void main(String []args)\par
\{\par
A a1=new A();\par
\}\par
\} // above code generate compile time error because constructor has static.\par
\cf1 Q. why we cant declare constructor as static.\par
\cf0 Because constructor create its memory before creating its object of class and constructor cant call without object.\par
\cf1 Q. what is utility class ?\par
\cf0 Ans: utility class contain only static method and static method are public so it can accessible in program.\par
When we want restrict utility class from object creation then we must be declaring constructor as private.\par
\cf1 Q. how we can create utility class in java?\par
\cf0 Ans: create constructor as private and define public static method.\par
\cf1 Q. what is single tone class?\par
\cf0 Ans: single tone class is design pattern and which allow to create object of class only once in application.\par
\cf1 Q. what is design pattern?\par
\cf0 Ans: design pattern represented the best practice used by experience object oriented software.\par
\cf1 Q. how to create single tone class in java?\par
\cf0 Ans: \par
1.declare class with private constructor \par
Class test\par
\{\par
Private test()\par
\{\}\par
\}\par
2.declare reference of same class with private static and null\par
Class test\par
\{\par
Private static test t=null;\par
Private test();\par
\{\}\line\}\par
\cf1 Q. what is difference between single tone and utility class \line Ans: \par
\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4566\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\cf0           Single Tone\b0\cell\b            Utility class \b0\cell\row\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4566\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\b Single tone class create its object but only one copy of object\b0\cell\b Utility class cant create its object its contain only static method\b0\cell\row\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4566\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\cell\b Class contain only static method and method are public\b0\cell\row 
\pard\widctlpar\sa160\sl252\slmult1\b\par
\cf1 Q. what is difference between constructor and method?\par
Ans: \par
\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4569\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar          constructor\cf0\b0\cell\cf1\b          method\cf0\b0\cell\row\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4569\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\b Constructor has a same name as class name\b0\cell\b Not compulsory function name and class name same \b0\cell\row\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4569\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\b Constructor has not return type\b0\cell\b Method have a return type\b0\cell\row\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4569\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\b Constructor call automatically when object created\b0\cell\b Need to call manually\b0\cell\row\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4569\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\b Constructor cant declare as static\b0\cell\b Function can declare static\b0\cell\row\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4569\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\b Constructor cant override \b0\cell\b Function can override\b0\cell\row\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4569\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\b Constructor cant declare as final\b0\cell\b Function can declare as final\b0\cell\row\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4569\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\b Constructor cant be abstract\b0\cell\b Method can abstract\b0\cell\row 
\pard\widctlpar\sa160\sl252\slmult1\b\par
                             \cf1 *****Inheritance*****\cf0\par
\cf1 Q. what is inheritance?\par
\cf0 Ans: inheritance means transfer property from one class to another class called as inheritance\par
Why use inheritance and what is benefit of inheritance.\par
\cf1 1.reusablity: \cf0 reusability means we can declare class only once and reuse it more than one time without creating its object.\par
\cf1 2.extensiblity: \cf0 extensibility means child class acquire property from parent class and add its own property also called as extensibility.\par
Class A                                   // Parent class\par
\{\}\par
Class b extends class A        // child class\par
\{\}\par
\par
\cf1 Q. why java provide object class as parent class to every class.\par
\cf0 Ans: object class contain some inbuilt method require to every class.\par
1.int hashcode     2.boolean equal   3.String to String    4.void wait()\par
5.void wait(int)   6.void notify()        7.void notify all()    8.Static block\par
9.class get class   \par
\cf1 Q. how we can say java is pure object oriented ?\par
\cf0 Ans: cant create application without class \par
Cant create application without inheritance.\par
Java is not pure object oriented because java support primitive data type static keyword and wrapper class\par
Constructor in inheritance.\par
\cf1 Q. can we use super and this constructor at same time?\par
Ans: No.\par
\cf0 Because super constructor and this constructor first line of calling constructor both constructor require first line \par
We cant use both constructor at same time\par
\cf1 Q. final keyword.\par
\cf0 Final keyword is non-access specifier in java we can use with  function and class\par
\cf1 1.final variable: \cf0 final variable means once we assign value to variable you cant modify that value.\par
Class hellowword\par
\{\par
Public static void main(string args[])\par
\{\par
Final int a=100;\par
++a;\par
System.out.println(\ldblquote  a is %d\rdblquote ,a);\par
\}\par
\} // above code generate compile time error because we cant modifies value\par
\par
\par
\cf1 *Final class: \cf0 final class means you cant inherit its class in another class , final class avoid inheritance.\par
How we can avoid inheritance in java: we can avoid inheritance in java with the help of final keyword\par
Final class a\par
\{\}\par
Class b extends a\par
\{\}\par
Class avoidinheritance\par
\{\line b b1=new b();\par
\}\par
\}\par
\cf1 Q. how we can avoid overriding in java and final method in java?\par
\cf0 Ans: final method means method cant override in child class \par
\cf1 What is method overriding.\par
\cf0 Method overriding means define method In parent class and redefine method in child class called as method overriding.\par
\cf1 Q. why use method overriding and what is benefit of method overriding.\par
\cf0 Ans:\par
1. to customized logic of parent class in child class\par
2.To achieve dynamic polymorphism.\par
\par
\cf1 Q. how we can avoid method overriding in java?\par
\cf0 Ans: declaring method as final we avoid method overriding in java.\par
Important point related method overriding.\par
Return type of parent class method and child class method must be same. \par
\cf1 Q. method overloading?\par
\cf0 Ans: method overloading measn same method name and return type with different parameter or different parameter in parent class and child class called as method overloading.\par
\cf1 Q. how we can call parent logic in method overloading.\par
\cf0 Ans: using super keyword we can call parent logic in method overloading.\par
\par
\cf1 Q. what is super?\par
\cf0 Ans: super is inbuilt reference which is present in every child class and which paint to parent class using super we can call parent logic.\par
\cf1 Q. can we override static method?\par
\cf0 Ans: No we cant override static method in child class .\par
Because Static method is used for method hiding purpose.\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 class\cf6  \cf9 M\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 show\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "i am A"\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 class\cf6  \cf9 N\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 show\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "i am B"\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 inheritanceapp\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 N\cf6  \cf13 n\cf7 =\cf4 new\cf6  \cf15 N\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18\ul n\cf7 .\cf21\i show\cf10\i0 ()\cf7\ulnone ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight0\b\f0  Output : I am B\par
\cf1 Q. what is method hiding?\par
\cf0 Ans: when we create reference of parent class and object of child class and call overridden method using parent reference then parent logic get executed not child logic.\par

\pard\widctlpar\cf4\highlight5\b0\f2 package\cf6  corejavtechhub\cf7 ;\cf8\par
\cf4 class\cf6  \cf9 M\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 show\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "i am A"\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 class\cf6  \cf9 N\cf6  \cf4 extends\cf6  \cf9 M\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 show\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "i am B"\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 inheritanceapp\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 M\cf6  \cf13 m\cf7 =\cf4 new\cf6  \cf15 N\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18\ul m\cf7 .\cf21\i show\cf10\i0 ()\cf7\ulnone ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\highlight0\b\f0\par
\cf1 Q. what is difference between overloading and overriding?\par
Ans: \par
\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4567\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar         overloading\cf0\b0\cell\cf1\b             overriding\cf0\b0\cell\row\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4567\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\b Overloading is  compile time polymorphism\b0\cell\b Overriding is runtime polymorphism\b0\cell\row\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4567\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\b We can perform overloading with same class not required inheritance\b0\cell\b Inheritance is mandatory In overriding\b0\cell\row\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4567\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\b In overloading method name must be same with different syntax, we can pass different type of data or different type of parameter \b0\cell\b In overriding method name syntax must be same return type parameter same\b0\cell\row\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4567\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\b Poor performance due to compile time polymorphism\b0\cell\b Better performance due to run time polymorphism\b0\cell\row\trowd\trgaph10\trleft113\trrh1\trpaddl10\trpaddr10\trpaddfl3\trpaddfr3
\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx4567\clcfpat20\clcbpat2\clbrdrl\brdrw10\brdrs\brdrcf20\clbrdrt\brdrw10\brdrs\brdrcf20\clbrdrr\brdrw10\brdrs\brdrcf20\clbrdrb\brdrw10\brdrs\brdrcf20 \cellx9021 
\pard\intbl\widctlpar\b Private and final method can be overload\b0\cell\b Private and final method cant be overload\b0\cell\row 
\pard\widctlpar\sa160\sl252\slmult1\b\par
\cf1 Q. what is abstraction?\par
\cf0 Ans: hiding information from end user at design level called as abstraction.\par
\cf1 Q. how we can achieve abstraction in java?\par
\cf0 Ans:\par
 1.by using abstract class and abstract method.\par
2.by using interface.\par
\par
\par
\cf1 Q. what is abstract class and abstract method?\par
\cf0 Ans: abstract class means class cant create its object, and abstract method means method cant have logic.\par
How to declare abstract class and abstract method in java.\par
Abstract class classname\par
\{  Abstract return type functionname(argument);\par
\}\par
\par
Abstract class vehicle\par
\{  Abstract void engine()\par
\}\par
Public class interface\par
\{  Public static void main(String []args)\par
\{  Vehicle v=new vehicle();\par
\}\par
\}\par
\cf1 Q. why use abstract class and abstract method?\par
\cf0 Ans: 1. Achieve abstraction   2. achieve dynamic polymorphism.\par
If we want to write any logic of abstract method we need to override abstract method and its child class and create object of child class and call it\par
\par
If we have abstract method in class then class must be abstract, we cant use abstract method in non-abstract class. If class declare as abstract then we cant create its object. If we create then generate compile time error.\par
\cf1 Q. why we cant create object of abstract class.\par
\cf0 Ans: because abstract class contain abstract method, abstract method cant have logic.\par
\cf1  If we cant create object of abstract class then how constructor get executed. \par
\cf0 Abstract class contain non abstract method we need override non-abstract method in abstract child class , if we create object of child class then constructor get executed.\par
\par
Q. what is major use of declare constructor in abstract class.\par
Ans: \par
\par
\cf1 Q. can we use abstract keyword with variable?\par
\cf0 Ans: No . because major goal of abstract keyword is achieve abstraction, method not use variable.\par
\par
\cf1 Q. can we declare method as final?\par
\cf0 Ans: No. because final method cant override in child class and abstract method must be override in child class. Id declare as final then generate compile time error. \par
\cf1 Q. can we declare abstract method as static ?\par
\cf0 Ans: No. because static keyword work with compile time polymorphism. And abstract method work with runtime polymorphism.\par
\cf1 Q. can we declare abstract method as final?\par
\cf0 Ans: No. because private method cant override and not support inheritance.\par
\par
\cf1 Q. can we declare abstract method as private?\par
\cf0 Ans: No. because private member cant support to inheritance and method overriding \par
\cf1 Q. can we declare as abstract method as protected ?\par
\cf0 Ans: yes , we can declare abstract method as protected ,protected help us to override in child class \par
Abstract class vehicle \par
\{\par
Protected abstract void engine();\par
\}\par
Class bike extends vehicle \par
\{\par
Protected void engine()\par
\{\par
System.out.pritnln(\ldblquote I am bike\rdblquote );\par
\}\par
\}\par

\pard\brdrb\brdrdb\brdrw15\brsp20 \widctlpar\sa160\sl252\slmult1\cf1\par
Use adapter class \par

\pard\widctlpar\sa160\sl252\slmult1 Q. what is adapter class?\par
\cf0 Ans: abstract class is design pattern which is use for cover the limitation of abstract class abstract method.\par
 adapter is intermediate class which contain all blank method of abstract class called as adapter.\par
\par
\cf1 Q. why we need to create reference of abstract class or what is benefit of abstract class reference?\par
\cf0 Ans: to achieve dynamic polymorphism and loose coupling we can use abstract class reference.\par
\par
\cf1 Q. dynamic polymorphism ?\par
\cf0 Ans: dynamic polymorphism means object bounded with functionality at program run time called as dynamic polymorphism.\par

\pard\widctlpar\cf4\kerning0\b0\f2 package\cf6  wellman\cf7 ;\cf8\par
\cf4 abstract\cf6  \cf4 class\cf6  \cf27 value\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 int\cf6  \cf19 a\cf7 ,\cf19 b\cf7 ;\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 setvalue\cf10 (\cf4 int\cf6  \cf12 x\cf7 ,\cf4 int\cf6  \cf12 y\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf19 a\cf7 =\cf12 x\cf7 ;\cf8\par
\cf6\tab\tab\cf19 b\cf7 =\cf12 y\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf4 abstract\cf6  \cf4 int\cf6  \cf11 getresult\cf10 ()\cf7 ;\cf8\par
\cf10\}\cf8\par
\par
\cf4 class\cf6  \cf9 addition\cf6  \cf4 extends\cf6  \cf27 value\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 int\cf6  \cf11 getresult\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf19 a\cf7 +\cf19 b\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par
\cf4 class\cf6  \cf9 mul\cf6  \cf4 extends\cf6  \cf27 value\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 int\cf6  \cf11 getresult\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf4 return\cf6  \cf19 a\cf7 *\cf19 b\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 calculator\cf8\par
\cf10\{\cf8\par
\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf8\par
\cf6\tab\cf10\{\cf6\tab\cf8\par
\cf6\tab\tab\cf27 value\cf6  \cf13 v\cf7 ;\cf8\par
\cf6\tab\tab\cf18 v\cf7 =\cf4 new\cf6  \cf15 addition\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18 v\cf7 .\cf15 setvalue\cf10 (\cf14 10\cf7 ,\cf14 20\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 result\cf7 =\cf18 v\cf7 .\cf28 getresult\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "addition is :"\cf6  \cf7 +\cf18 result\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf8\par
\cf6\tab\tab\cf18 v\cf7 =\cf4 new\cf6  \cf15 mul\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf18 v\cf7 .\cf15 setvalue\cf10 (\cf14 2\cf7 ,\cf14 3\cf10 )\cf7 ;\cf8\par
\cf6\tab\tab\cf4 int\cf6  \cf13 result1\cf7 =\cf18 v\cf7 .\cf28 getresult\cf10 ()\cf7 ;\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "addition is :"\cf6  \cf7 +\cf18 result1\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\kerning2\b\f0\par
\cf1 Q. What is coupling ?\par
\cf0 Ans: coupling method of particular class is dependent on particular parameter called as coupling.\par
There are two type of coupling \par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa160\sl252\slmult1\cf1 Tight coupling :\cf0  method of particular class  is 100% dependent on another class object called as tight coupling.\par
{\pntext\f0 2.\tab}\cf1 Loose coupling :\cf0  loose coupling means method of particular class is partially dependent on another class object called as loose coupling \par

\pard\widctlpar\sa160\sl252\slmult1\cf1\par

\pard\brdrb\brdrdb\brdrw15\brsp20 \widctlpar\sa160\sl252\slmult1 Interface\par

\pard\widctlpar\sa160\sl252\slmult1\cf0  \cf1 Q.\cf0  \cf1 What is interface ?\par
\cf0 Ans: interface is same like as abstract class in java.\par
\par
\cf1 Q. Why use interface if we have abstract class\par
\cf0 Ans: \par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa160\sl252\slmult1 to achieve multiple inheritance \par
{\pntext\f0 2.\tab}Achieve 100% abstraction\par
{\pntext\f0 3.\tab}Achieve dynamic polymorphism\par

\pard\widctlpar\sa160\sl252\slmult1\cf1  Q. why java not use classes for multiple inheritance implementation \par
\cf0 Ans: because diamond problem \par
\cf1 Q. what Is diamond problem?\par
\cf0 Ans: diamond problem means in multiple inheritance more than one parent class and single child class if we create object of child class and call to parent class then compiler confused  called as diamond problem.\par
Class A               class b              class c\par
\par
                            Class d \par
D d=new D();\par
d.show();\par
\par
\par
\cf1 Q. how to work with interface?\par
\cf0 Ans: declare keyword as interface.\par
Syntax: interface interfacename \par
\{return type functionname(datatype variblename)\par
\}\par
Ex: interface ABC \par
\{\par
Void show();\par
\}\par
\highlight3 Note : interface method cant have logic because they are by default public and abstract and interface cant create its object because it is internally abstract.\highlight0\par
\par

\pard\widctlpar\cf4\kerning0\b0\f2\fs20 package\cf6  wellman\cf7 ;\cf8\par
\cf4 interface\cf6  \cf29 abc\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 show\cf10 ()\cf6  \cf7 ;\cf8\par
\cf10\}\cf8\par
\cf4 class\cf6  \cf9 mno\cf6  \cf4 implements\cf6  \cf29 abc\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf30\i @Override\cf8\i0\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 show\cf10 ()\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "i am show"\cf10 )\cf7 ;\cf6\tab\tab\cf8\par
\cf6\tab\cf10\}\cf6\tab\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 interfac\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\cf9 mno\cf6  \cf13 m\cf7 =\cf4 new\cf6  \cf15 mno\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf18 m\cf7 .\cf15 show\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\kerning2\b\f0\fs22\par
 Importance point related to interface \par

\pard 
{\pntext\f0 1.\tab}{\*\pn\pnlvlbody\pnf0\pnindent0\pnstart1\pndec{\pntxta.}}
\fi-360\li720\sa160\sl252\slmult1 Interface cant create its object \par
{\pntext\f0 2.\tab}Interface method are by default public and abstract \par
{\pntext\f0 3.\tab}Interface variable are public and final \par

\pard\widctlpar\sa160\sl252\slmult1\cf1 Q. why interface variable are declare as public static final ?\par
\cf0 Ans: because interface cant create its object so if we want to use interface variable without object then we can use it by using interface name so it is declare as static.\par
\par
\cf1 We cant declare interface method as final\cf0   : if we declare as final then we cant override it \par
\cf1 We cant declare as interface method as static :\cf0  static method use for achieve compile time polymorphism and interface method is use for achieve dynamic polymorphism.\par
\par

\pard\widctlpar\sa160\sl276\slmult1\cf1 Q. Can we declare as interface methos as protected ?\par
\cf0 Ans: no we cant declare as interface method as protected ,if we declare abstract method in abstract class then we can declare it.\par
\cf1 Q. it is compulsory to override interface method as public ?\par
\cf0 Ans: yes.\par
\highlight3 Note : perform inheritance between interface to interface then use extends keyword.\highlight0\par

\pard\widctlpar\cf4\kerning0\b0\f2\fs20 package\cf6  wellman\cf7 ;\cf8\par
\cf4 interface\cf6  \cf29 abc\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 show\cf10 ()\cf6  \cf7 ;\cf8\par
\cf10\}\cf8\par
\par
\cf4 interface\cf6  \cf29 xyz\cf6  \cf4 extends\cf6  \cf29 abc\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 display\cf10 ()\cf7 ;\cf8\par
\cf10\}\cf8\par
\cf4 class\cf6  \cf9 mno\cf6  \cf4 implements\cf6  \cf29 abc\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf30\i @Override\cf8\i0\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 show\cf10 ()\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "i am show"\cf10 )\cf7 ;\cf6\tab\tab\cf8\par
\cf6\tab\cf10\}\cf6\tab\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 interfac\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\cf9 mno\cf6  \cf13 m\cf7 =\cf4 new\cf6  \cf15 mno\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf18 m\cf7 .\cf15 show\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\kerning2\b\f0\fs22\par
Interface to class use implements keywords\par
Class to class use extends keyword \par
Class to interface not allow in java.\par
\highlight3 Note : if interface contain more than one method then override all method where interface get implement.\highlight0\par

\pard\widctlpar\cf4\kerning0\b0\f2\fs20 package\cf6  wellman\cf7 ;\cf8\par
\cf4 interface\cf6  \cf29 abc\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 show\cf10 ()\cf6  \cf7 ;\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 display\cf10 ()\cf7 ;\cf8\par
\cf10\}\cf8\par
\par
\cf4 class\cf6  \cf9 mno\cf6  \cf4 implements\cf6  \cf29 abc\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf30\i @Override\cf8\i0\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 show\cf10 ()\cf6  \cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "i am show"\cf10 )\cf7 ;\cf6\tab\tab\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf6\tab\cf30\i @Override\cf8\i0\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 display\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf6\tab\tab\cf8\par
\cf6\tab\cf10\}\cf6\tab\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 interfac\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\cf9 mno\cf6  \cf13 m\cf7 =\cf4 new\cf6  \cf15 mno\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf18 m\cf7 .\cf15 show\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\kerning2\b\f0\fs22\par
\cf1 Use adapter class :\cf0  adapter class contain all blank method of interface.\par
Which is capable for provide specific method to child class.\par

\pard\widctlpar\cf4\kerning0\b0\f2\fs20 package\cf6  wellman\cf7 ;\cf8\par
\cf4 interface\cf6  \cf29 ijk\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 show\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 display\cf10 ()\cf7 ;\cf8\par
\cf10\}\cf8\par
\cf4 class\cf6  \cf9 adp\cf6  \cf4 implements\cf6  \cf29 ijk\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf30\i @Override\cf8\i0\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 show\cf10 ()\cf6  \cf8\par
\cf6\tab\cf10\{\cf6\tab\tab\cf8\par
\cf6\tab\cf10\}\cf8\par
\par
\cf6\tab\cf30\i @Override\cf8\i0\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 display\cf10 ()\cf6  \cf8\par
\cf6\tab\cf10\{\cf6\tab\tab\cf8\par
\cf6\tab\cf10\}\cf6\tab\cf8\par
\cf10\}\cf8\par
\par
\cf4 class\cf6  \cf9 xyz\cf6  \cf4 extends\cf6  \cf9 adp\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 show\cf10 ()\cf8\par
\cf6\tab\cf10\{\cf8\par
\cf6\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "i am show"\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 adapter\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf8\par
\cf6\tab\cf10\{\cf6\tab\tab\cf8\par
\cf9 xyz\cf6  \cf13 x\cf7 =\cf4 new\cf6  \cf15 xyz\cf10 ()\cf7 ;\cf8\par
\cf18 x\cf7 .\cf15 show\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf0\kerning2\b\f0\fs22\par
\highlight3 Note : we cant create object of interface but we cant create reference of interface\highlight0  \par
Then we can create object of implementer class \par

\pard\widctlpar\cf4\kerning0\b0\f2\fs20 package\cf6  wellman\cf7 ;\cf8\par
\par
\cf4 interface\cf6  \cf29 pqr\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 void\cf6  \cf11 show\cf10 ()\cf7 ;\cf8\par
\cf10\}\cf8\par
\cf6  \cf8\par
\cf4 class\cf6  \cf9 def\cf6  \cf4 implements\cf6  \cf29 pqr\cf8\par
\cf10\{\cf8\par
\cf6\tab\cf30\i @Override\cf8\i0\par
\cf6\tab\cf4 public\cf6  \cf4 void\cf6  \cf11 show\cf10 ()\cf6  \cf8\par
\cf6\tab\cf10\{\cf6\tab\cf8\par
\cf6\tab\tab\cf9 System\cf7 .\cf16\b\i out\cf7\b0\i0 .\cf15 println\cf10 (\cf17 "amol"\cf10 )\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf6\tab\cf8\par
\cf10\}\cf8\par
\cf4 public\cf6  \cf4 class\cf6  \cf9 adapter\cf6  \cf8\par
\cf10\{\cf8\par
\cf6\tab\cf4 public\cf6  \cf4 static\cf6  \cf4 void\cf6  \cf11 main\cf10 (\cf9 String\cf10 []\cf6  \cf12 args\cf10 )\cf8\par
\cf6\tab\cf10\{\cf6\tab\tab\cf8\par
\cf29 pqr\cf6  \cf13 p\cf7 =\cf4 new\cf6  \cf15 def\cf10 ()\cf7 ;\cf8\par
\cf18 p\cf7 .\cf28 show\cf10 ()\cf7 ;\cf8\par
\cf6\tab\cf10\}\cf8\par
\cf10\}\cf8\par
\par

\pard\widctlpar\sa160\sl252\slmult1\cf1\kerning2\b\f0\fs22\par
Q. What is purpose of interface reference ?\par
\cf0 Ans: major goal of interface reference is achieve dynamic polymorphism.\par
\cf1 Q. How to achieve multiple inheritance using interface \par
\cf0 Ans: for achieve multiple inheritance using interface for that one base class and one child class and more than one parent interface.\par
Interface interface1 \par
\{\par
\} \par
Interface interface2 \par
\{\par
\}\par
Class parentclass name \par
\{\line\}\par
Child classname extends parentclassname implements interface1, interface2\par
\{\line\}\par
\cf1 Q. what is difference between abstract class and interface?\par
\cf0 Ans: \par
\trowd\trgaph108\trleft5\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx4513\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx9021 
\pard\intbl\widctlpar\sl252\slmult1 Abstract class is use for achieve partial abstraction\cell Interface is use for achieve 100% abstraction\cell\row\trowd\trgaph108\trleft5\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx4513\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx9021 
\pard\intbl\widctlpar\sl252\slmult1 Abstract keyword is use for declare abstract class\cell Interface is by default abstract class\cell\row\trowd\trgaph108\trleft5\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx4513\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx9021 
\pard\intbl\widctlpar\sl252\slmult1 Abstract class contain non-abstract method \cell In interface every method is by default public and abstract\cell\row\trowd\trgaph108\trleft5\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx4513\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx9021 
\pard\intbl\widctlpar\sl252\slmult1 Abstract method is not public \cell Interface method is by default public \cell\row\trowd\trgaph108\trleft5\trbrdrl\brdrs\brdrw10 \trbrdrt\brdrs\brdrw10 \trbrdrr\brdrs\brdrw10 \trbrdrb\brdrs\brdrw10 \trpaddl108\trpaddr108\trpaddfl3\trpaddfr3
\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx4513\clbrdrl\brdrw10\brdrs\clbrdrt\brdrw10\brdrs\clbrdrr\brdrw10\brdrs\clbrdrb\brdrw10\brdrs \cellx9021 
\pard\intbl\widctlpar\sl252\slmult1 Abstract class cant support multiple inheritance \cell Interface support multiple inheritance \cell\row 
\pard\widctlpar\sa160\sl252\slmult1\par

\pard\brdrb\brdrdb\brdrw15\brsp20 \widctlpar\sa160\sl252\slmult1 EXCEPTION HANDLING\par

\pard\widctlpar\sa160\sl252\slmult1\cf1 Q. what is exception handling?\par
\cf0 Ans: exception is event which occur at program run time which is responsible for disturb normal flow of application. \par
\par
\par
\par

\pard\sa200\sl276\slmult1\kerning0\b0\f4\lang9\par
}
 